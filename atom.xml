<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>那个码农</title>
  
  <subtitle>钟意的博客 | ThatCoder&#39;s Blog 钟意博客</subtitle>
  <link href="https://blog.thatcoder.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.thatcoder.cn/"/>
  <updated>2024-03-21T19:30:06.844Z</updated>
  <id>https://blog.thatcoder.cn/</id>
  
  <author>
    <name>钟意</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PlanetScale的免费Hobby计划即将结束</title>
    <link href="https://blog.thatcoder.cn/PlanetScale%20free%20Hobby%20plan%20is%20being%20retired/"/>
    <id>https://blog.thatcoder.cn/PlanetScale%20free%20Hobby%20plan%20is%20being%20retired/</id>
    <published>2024-03-21T19:00:00.000Z</published>
    <updated>2024-03-21T19:30:06.844Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如题"><a href="#如题" class="headerlink" title="如题"></a>如题</h2><p>三封邮件，十分钟一封，赶紧停下代码迁移数据库。</p><p>之前临时测试 waline 评论的数据，就部署在 PlanetScale，没想到一用就是一年。</p><p>白嫖这么久怪不好意思的。 <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_doge.png"/></span></p><p>不会有博友也是PlanetScale吧。</p><p><img src="https://upyun.thatcdn.cn/myself/typora/202403220321769.png" alt="PlanetScale的免费Hobby计划即将结通知"></p>]]></content>
    
    
    <summary type="html">白嫖党们，PlanetScale的免费Hobby计划即将结业，届时发现，白嫖之路已经走到了尽头。</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="随笔" scheme="https://blog.thatcoder.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Stellar 1.18.5 迁移到 latest</title>
    <link href="https://blog.thatcoder.cn/stellar-1.18.5-to-latest/"/>
    <id>https://blog.thatcoder.cn/stellar-1.18.5-to-latest/</id>
    <published>2024-01-07T16:00:00.000Z</published>
    <updated>2024-01-14T15:00:32.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不得不说，从1.18迁移到1.23变化挺大。作者xaoxuu辛苦了。</p><h2 id="迁移工作"><a href="#迁移工作" class="headerlink" title="迁移工作"></a>迁移工作</h2><p>考虑长期使用stellar，就fork了一个分支持续跟进作者的更新。<br><img src="https://upyun.thatcdn.cn/myself/typora/202401080550812.png"></p><h2 id="变化"><a href="#变化" class="headerlink" title="变化"></a>变化</h2><p>很多细节变化吧，这里备注一下巨变。</p><h3 id="references写法改变"><a href="#references写法改变" class="headerlink" title="references写法改变"></a>references写法改变</h3><p>我wiki大量使用了参考文献功能，给出正则表达式批量替换方法</p><ul><li>查找：<code>- title: &#39;(.*?)&#39;\n    url: &#39;(.*?)&#39;</code></li><li>替换：<code>- &#39;[$1]($2)&#39;</code></li></ul><p>也不是万能的，如果标题有特殊字符违背markdown写法可能报错，但剩下几个特殊的手动改就行。</p><h3 id="页尾license"><a href="#页尾license" class="headerlink" title="页尾license"></a>页尾license</h3><figure class="highlight yaml"><figcaption><span>_stellar.config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">article:</span><br>  <span class="hljs-attr">license:</span> <span class="hljs-string">|</span><br>    <span class="hljs-string">本文为</span> [<span class="hljs-string">$</span>&#123;<span class="hljs-string">author.name</span>&#125;]<span class="hljs-string">($&#123;author.url&#125;)</span> <span class="hljs-string">撰写，采用</span> [<span class="hljs-string">CC</span> <span class="hljs-string">BY-NC-SA</span> <span class="hljs-number">4.0</span>]<span class="hljs-string">(https://creativecommons.org/licenses/by-nc-sa/4.0/)</span> <span class="hljs-string">许可协议，转载请注明出处。</span><br></code></pre></td></tr></table></figure><h3 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h3><figure class="highlight yaml"><figcaption><span>_data/authors.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 作者 1 （默认）</span><br><span class="hljs-attr">ThatCoder:</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;钟意&#x27;</span><br><span class="hljs-attr">avatar:</span> <span class="hljs-string">/custom/img/author.jpg</span><br><span class="hljs-attr">banner:</span> <span class="hljs-string">https://upyun.thatcdn.cn/myself/typora/202401120247887.webp</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">感谢你的阅读,</span> <span class="hljs-string">让我们拥有一段对彼此都有意义的时光.</span><br></code></pre></td></tr></table></figure><h3 id="friends标签"><a href="#friends标签" class="headerlink" title="friends标签"></a>friends标签</h3><p>friends标签的分组需要单独一个yml文件<br>sites也一样</p><h3 id="wiki系统"><a href="#wiki系统" class="headerlink" title="wiki系统"></a>wiki系统</h3><p>这个一开始有点绕，我整理了一下逻辑。</p><ol><li>_data&#x2F;wiki.yml 的列表名字如 pro_name 指向 _data&#x2F;wiki&#x2F;pro_name.yml 的文件名字</li><li>_data&#x2F;wiki&#x2F;xxx.yml 文件里面的 path: &#x2F;wiki&#x2F;pro_path&#x2F; 参数指向 source&#x2F;wiki&#x2F;pro_path&#x2F; 文件夹</li><li>source&#x2F;wiki&#x2F;pro_path&#x2F; 文件夹内文件的 wiki: pro_name 闭环指向 _data&#x2F;wiki.yml 的列表名字</li></ol><ul><li>综上 _data&#x2F;wiki.yml 和 _data&#x2F;wiki&#x2F;pro_name.yml 和 文件wiki: pro_name 需要一致是 pro_name</li><li>而最终上线的项目在线 url 与  pro_name 无关，关联的是 source&#x2F;wiki&#x2F;pro_path&#x2F; 对应的 pro_path 目录名称</li></ul><h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h3><p>来不及一个一个试功能，先写到这，便把博客更新到1.23.0</p><h2 id="万能时间线重构"><a href="#万能时间线重构" class="headerlink" title="万能时间线重构"></a>万能时间线重构</h2><blockquote><p>文档待写, 测试中</p></blockquote><h3 id="联合测试"><a href="#联合测试" class="headerlink" title="联合测试"></a>联合测试</h3><div class="tag-plugin timeline timetmpl"><div class="timenode" index="0"><div class="header"><p>netease</p></div><div class="body fs14">`{ "api": "https://netease.thatapi.cn/user/event?uid=134968139&limit=10" }`</div></div><div class="timenode" index="1"><div class="header"><p>memos</p></div><div class="body fs14">`{ "api": "https://memos.thatcoder.cn/api/v1/memo?creatorId=1&rowStatus=NORMAL&limit=20" }`</div></div></div>]]></content>
    
    
    <summary type="html">迁移工作还好，就是魔改不太好搬运。</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Stellar" scheme="https://blog.thatcoder.cn/tags/Stellar/"/>
    
  </entry>
  
  <entry>
    <title>微信读书自动阅读</title>
    <link href="https://blog.thatcoder.cn/Tencent-WxRead-Daily/"/>
    <id>https://blog.thatcoder.cn/Tencent-WxRead-Daily/</id>
    <published>2023-09-14T12:00:00.000Z</published>
    <updated>2023-09-18T15:28:08.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文章实现需要服务器, 无可视化界面亦可。<br>使用的Cookie获取上一篇文章有介绍, 顺手写了这篇。</p><p>每日一问: 我为什么要实现这个功能???</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="微信读书Cookie续活" href="https://blog.thatcoder.cn/Tencent-WxRead-Cookies/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">微信读书Cookie续活</span><span class="cap link footnote">https://blog.thatcoder.cn/Tencent-WxRead-Cookies/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="机制分析"><a href="#机制分析" class="headerlink" title="机制分析"></a>机制分析</h2><p>网页版状态下阅读, 每分钟左右会有一个read请求, 通过回执可以判断是否阅读成功。<br>具体参数我不想耗费时间去逆向, 但是可以通过模拟浏览阅读页面来等待read响应进行read重播,进而轻易实现自动阅读。</p><h2 id="稳定性"><a href="#稳定性" class="headerlink" title="稳定性"></a>稳定性</h2><p>服务器测试了24小时, 阅读时间也是相应增加24。</p><p>有趣的是, 经测试, 每次程序运行5min, 增加的时长可能是 5min、6min、8min、11min、13min 甚至是 21min。<br>但是总时长是稳定的, 也就是说会回归一天能拉满的时间24h。</p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p>虽说是浏览器模拟事件, 到了python的表演时间, 但是我采用了JS去写, 辅佐包是 <a href="https://playwright.dev/">Playwright</a> 。<br>总体是一次有趣的尝试。</p><h3 id="准备事项"><a href="#准备事项" class="headerlink" title="准备事项"></a>准备事项</h3><p>开始吧, 安装 Playwright</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 先创建一个文件夹</span><br><span class="hljs-built_in">mkdir</span> /server/auto/wxread &amp;&amp; <span class="hljs-built_in">cd</span> /server/auto/wxread<br><br><span class="hljs-comment"># 安装 playwright</span><br>npm install playwright<br>npx playwright install<br><span class="hljs-comment"># 下面这个可能需要点时间</span><br><span class="hljs-comment"># 因为有浏览器的下载</span><br>npx playwright install-deps<br><br><span class="hljs-comment"># 当然少不了 axios</span><br>npm install axios<br><br><span class="hljs-comment"># 好的, 一切准备就绪, 创建代码吧</span><br></code></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><figcaption><span>wxread.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; firefox &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;playwright&#x27;</span>);<br><span class="hljs-keyword">const</span> axios = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;axios&#x27;</span>);<br><br><span class="hljs-comment">// 获取命令行参数</span><br><span class="hljs-keyword">const</span> args = process.<span class="hljs-property">argv</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>);<br><span class="hljs-keyword">const</span> params = &#123;&#125;;<br>args.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">arg</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> [key, value] = arg.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;=&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (key &amp;&amp; value) &#123;<br>        params[key] = value;<br>    &#125;<br>&#125;);<br><br><span class="hljs-keyword">const</span> url1 = <span class="hljs-string">&#x27;https://weread.qq.com/web/reader/8f5329e0813ab7d1eg012feake4d32d5015e4da3b7fbb1fa&#x27;</span>;<br><span class="hljs-keyword">const</span> url2 = <span class="hljs-string">&#x27;https://weread.qq.com/web/book/read&#x27;</span>;<br><span class="hljs-keyword">let</span> capturedResponse = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> browser = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">const</span> scrollInterval = <span class="hljs-number">10000</span>; <span class="hljs-comment">// 上下滑动间隔时间 单位毫秒</span><br><span class="hljs-keyword">const</span> totalTime = <span class="hljs-number">400000</span>; <span class="hljs-comment">// 单次阅读时间 单位毫秒</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getXHR</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Success: 启动 Playwright 浏览器&quot;</span>);<br>    browser = <span class="hljs-keyword">await</span> firefox.<span class="hljs-title function_">launch</span>(&#123;<br>        <span class="hljs-attr">headless</span>: <span class="hljs-literal">true</span>,<br>    &#125;);<br>    <span class="hljs-keyword">const</span> page = <span class="hljs-keyword">await</span> browser.<span class="hljs-title function_">newPage</span>();<br>    <span class="hljs-keyword">await</span> page.<span class="hljs-title function_">setExtraHTTPHeaders</span>(&#123;<br>        <span class="hljs-attr">cookie</span>: (<span class="hljs-keyword">await</span> axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;https://sijnzx.laf.thatcoder.cn/tencent-weread-refcookie?key=&quot;</span>+params[<span class="hljs-string">&#x27;key&#x27;</span>])).<span class="hljs-property">data</span>[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;cookies&quot;</span>]<br>    &#125;);<br>    <span class="hljs-keyword">await</span> page.<span class="hljs-title function_">goto</span>(url1, &#123;<br>        <span class="hljs-attr">waitUntil</span>: <span class="hljs-string">&#x27;networkidle&#x27;</span>,<br>    &#125;);<br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Success: 打开内容页面&quot;</span>);<br>    page.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;response&#x27;</span>, <span class="hljs-keyword">async</span> (response) =&gt; &#123;<br>        <span class="hljs-keyword">if</span> (response.<span class="hljs-title function_">url</span>() === url2) &#123;<br>            <span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>            <span class="hljs-keyword">if</span> (data[<span class="hljs-string">&#x27;succ&#x27;</span>] === <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Success: 目标URL响应成功&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Error: 目标URL响应失败&quot;</span>);<br>            &#125;<br>            capturedResponse = data[<span class="hljs-string">&#x27;succ&#x27;</span>] === <span class="hljs-number">1</span> ? response : <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">repeatXHR</span>(<span class="hljs-number">100</span>);<br>            <span class="hljs-comment">// 不要关闭浏览器</span><br>        &#125;<br>    &#125;);<br><br><span class="hljs-comment">// 定期上下滑动</span><br>    <span class="hljs-keyword">let</span> scrollCount = <span class="hljs-number">0</span>; <span class="hljs-comment">// 计数器</span><br>    <span class="hljs-keyword">let</span> scrollDirection = <span class="hljs-number">1</span>; <span class="hljs-comment">// 1表示向下滑动，-1表示向上滑动</span><br><br>    <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>        <span class="hljs-keyword">await</span> page.evaluate(<span class="hljs-function">(<span class="hljs-params">scrollDirection</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">const</span> windowHeight = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>;<br>            <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">scrollBy</span>(<span class="hljs-number">0</span>, scrollDirection * windowHeight); <span class="hljs-comment">// 向上或向下滑动一个屏幕高度</span><br>        &#125;, scrollDirection);<br><br>        scrollCount++;<br><br>        <span class="hljs-comment">// 如果达到了五次滑动，切换方向并重置计数器</span><br>        <span class="hljs-keyword">if</span> (scrollCount === <span class="hljs-number">5</span>) &#123;<br>            scrollDirection *= -<span class="hljs-number">1</span>; <span class="hljs-comment">// 切换方向</span><br>            scrollCount = <span class="hljs-number">0</span>; <span class="hljs-comment">// 重置计数器</span><br>        &#125;<br>    &#125;, scrollInterval);<br><br><br>    <span class="hljs-comment">// 设置浏览器关闭定时器</span><br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Success: 关闭浏览器&quot;</span>);<br>        <span class="hljs-keyword">await</span> browser.<span class="hljs-title function_">close</span>();<br>    &#125;, totalTime);<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">repeatXHR</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">count</span>) =&gt; &#123;<br>    <span class="hljs-keyword">if</span> (!capturedResponse) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Failed: 没有捕获到响应，无法重放&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">const</span> request = capturedResponse.<span class="hljs-title function_">request</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; count; i++) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">axios</span>(&#123;<br>                <span class="hljs-attr">method</span>: request.<span class="hljs-title function_">method</span>(),<br>                <span class="hljs-attr">url</span>: request.<span class="hljs-title function_">url</span>(),<br>                <span class="hljs-attr">headers</span>: request.<span class="hljs-title function_">headers</span>(),<br>                <span class="hljs-attr">params</span>: request.<span class="hljs-property">params</span>,<br>                <span class="hljs-attr">data</span>: request.<span class="hljs-title function_">postData</span>(),<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (response.<span class="hljs-property">data</span>.<span class="hljs-property">succ</span> !== <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Failed: 重放响应 <span class="hljs-subst">$&#123;i + <span class="hljs-number">1</span>&#125;</span>: 失败, succ!==1`</span>);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`Failed: 重放响应 <span class="hljs-subst">$&#123;i + <span class="hljs-number">1</span>&#125;</span>: 失败, <span class="hljs-subst">$&#123;error.message&#125;</span>`</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Success: 重放响应 <span class="hljs-subst">$&#123;count&#125;</span> 次完毕`</span>)<br>&#125;;<br><br>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">getXHR</span>();<br>&#125;)();<br></code></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>代码会启动一个无头浏览器, 所以没有可视化也不需要担心。<br>个人测试24小时, 无任何问题, 使用的内存为300MB左右, CPU占用率为0.1%左右。<br>对了, 带上key参数是我接口的鉴权, 也就是上一篇文章的参数(个人有所修改)。<br>你实现了上一篇文章的获取可以使用你的接口。保证<code>cookie</code>是有效的即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">node wxread.js key=xxxx<br><br><span class="hljs-comment"># 成功运行大概输出如下</span><br><span class="hljs-comment">#    Success: 启动 Playwright 浏览器</span><br><span class="hljs-comment">#    Success: 打开内容页面</span><br><span class="hljs-comment">#    Success: 目标URL响应成功</span><br><span class="hljs-comment">#    Success: 重放响应 100 次完毕</span><br><span class="hljs-comment">#    Success: 目标URL响应成功</span><br><span class="hljs-comment">#    Success: 重放响应 100 次完毕</span><br><span class="hljs-comment">#    Success: 浏览器关闭 (400秒后)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">实现微信读书自动阅读, 增加阅读时长, 打卡阅读天数</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Tencent" scheme="https://blog.thatcoder.cn/tags/Tencent/"/>
    
  </entry>
  
  <entry>
    <title>微信读书Cookies续活</title>
    <link href="https://blog.thatcoder.cn/Tencent-WxRead-Cookies/"/>
    <id>https://blog.thatcoder.cn/Tencent-WxRead-Cookies/</id>
    <published>2023-09-13T11:00:00.000Z</published>
    <updated>2023-09-18T15:28:07.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="机制分析"><a href="#机制分析" class="headerlink" title="机制分析"></a>机制分析</h2><p>很多优秀的文章分析了延期机制, 这里列举两个</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="Hank's Blog 微信读书延期机制分析" href="https://zhaohongxuan.github.io/2022/05/16/how-to-relong-cookies-in-weread/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">Hank's Blog 微信读书延期机制分析</span><span class="cap link footnote">https://zhaohongxuan.github.io/2022/05/16/how-to-relong-cookies-in-weread/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin link dis-select"><a class="link-card plain" title="陈虚渊 微信读书数据内容接口逆向" href="https://blog.csdn.net/paycho/article/details/132796745" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">陈虚渊 微信读书数据内容接口逆向</span><span class="cap link footnote">https://blog.csdn.net/paycho/article/details/132796745</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="稳定性"><a href="#稳定性" class="headerlink" title="稳定性"></a>稳定性</h2><p>目前跑了几天, Cookies都能自动刷新保活</p><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202309132220322.png" alt="每小时自动刷新回执" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">每小时自动刷新回执</span></div></div><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><p>续活我没使用代理服务器, 直接请求了</p><figure class="highlight js"><figcaption><span>refCookie</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 刷新 Cookie 的函数，模拟发送请求获取新 Cookie</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">refCookie</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">uid: string</span>) =&gt; &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> axios.<span class="hljs-title function_">head</span>(<span class="hljs-string">&#x27;https://weread.qq.com&#x27;</span>, &#123; <span class="hljs-attr">headers</span>: <span class="hljs-title function_">globalHeaders</span>() &#125;);<br>    <span class="hljs-keyword">if</span> (response.<span class="hljs-property">status</span> === <span class="hljs-number">200</span> || response.<span class="hljs-property">headers</span>[<span class="hljs-string">&#x27;set-cookie&#x27;</span>]) &#123;<br>        globalCookies = <span class="hljs-title class_">CookieUtil</span>.<span class="hljs-title class_">WebArrayToString</span>(response.<span class="hljs-property">headers</span>[<span class="hljs-string">&#x27;set-cookie&#x27;</span>], globalCookies);<br>        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">await</span> <span class="hljs-title function_">upUserCookie</span>(uid)) ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span><br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h2><blockquote><p>运行在自己搭建的 Laf 云函数, 不能无脑抄。 代码虽烂 但已写注释。<br>需要临时使用我的接口可以联系我</p></blockquote><details class="tag-plugin colorful folding" ><summary><span>代码结构图</span></summary><div class="body"><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202309132103742.png" alt="这样也许清晰一点" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">这样也许清晰一点</span></div></div></div></details><figure class="highlight js"><figcaption><span>Serverless Code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span>;<br><span class="hljs-keyword">import</span> cloud <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/cloud-sdk&quot;</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * API请求入口方法</span><br><span class="hljs-comment"> */</span><br><span class="hljs-built_in">exports</span>.<span class="hljs-property">main</span> = <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">ctx: FunctionContext</span>) &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123; cookies, uid, refresh &#125; = ctx.<span class="hljs-property">method</span> === <span class="hljs-string">&#x27;GET&#x27;</span> ? ctx.<span class="hljs-property">query</span> || ctx.<span class="hljs-property">params</span> : ctx.<span class="hljs-property">body</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">verifyData</span>(uid)) &#123;  <span class="hljs-comment">// 用户获取cookie请求</span><br>      <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">await</span> userServer.<span class="hljs-title function_">verifyUser</span>(uid))) &#123;<br>        !(<span class="hljs-keyword">await</span> <span class="hljs-title class_">CookiesApi</span>.<span class="hljs-title function_">verifyRefresh</span>(uid)) || (<span class="hljs-keyword">await</span> <span class="hljs-title class_">CookiesApi</span>.<span class="hljs-title function_">refCookie</span>(refresh))<br>        <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">success</span>(<span class="hljs-string">&quot;获取Cookie成功&quot;</span>, &#123; <span class="hljs-attr">cookies</span>: globalCookies &#125;)<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">failed</span>(<span class="hljs-string">&quot;搞咩! &quot;</span> + uid + <span class="hljs-string">&quot; 不存在!&quot;</span>);<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">verifyData</span>(cookies)) &#123;   <span class="hljs-comment">// 新增用户请求</span><br>      <span class="hljs-keyword">const</span> uid = <span class="hljs-title class_">CookieUtil</span>.<span class="hljs-title class_">StringToJson</span>(cookies)[<span class="hljs-string">&#x27;wr_vid&#x27;</span>]<br>      globalCookies = cookies<br>      <span class="hljs-keyword">const</span> userInfo = (<span class="hljs-keyword">await</span> <span class="hljs-title class_">CookiesApi</span>.<span class="hljs-title function_">getUserInfo</span>(uid))<br>      <span class="hljs-keyword">if</span> (!userInfo[<span class="hljs-string">&#x27;name&#x27;</span>]) &#123;<br>        <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">failed</span>(<span class="hljs-string">&quot;搞咩! cookies 不能用!&quot;</span>);<br>      &#125;<br>      <span class="hljs-keyword">const</span> <span class="hljs-attr">userData</span>: <span class="hljs-title class_">WxReadUser</span> = &#123;<br>        <span class="hljs-string">&#x27;userVid&#x27;</span>: uid,<br>        <span class="hljs-string">&#x27;userInfo&#x27;</span>: userInfo,<br>        <span class="hljs-string">&#x27;cookies&#x27;</span>: globalCookies,<br>        <span class="hljs-string">&#x27;cookies_uptime&#x27;</span>: (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()).<span class="hljs-title function_">valueOf</span>(),<br>        <span class="hljs-string">&#x27;cookies_life&#x27;</span>: <span class="hljs-literal">true</span><br>      &#125;<br>      <span class="hljs-keyword">const</span> add = (<span class="hljs-keyword">await</span> userServer.<span class="hljs-title function_">addUser</span>(userData))<br>      <span class="hljs-keyword">if</span> (add.<span class="hljs-property">answer</span>) &#123;<br>        <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">success</span>(<br>          <span class="hljs-string">`存入cookies成功, 未来取用cookies请通过以下方式<span class="hljs-subst">$&#123;<span class="hljs-string">&#x27;\n&#x27;</span>&#125;</span>[ https://sijnzx.laf.thatcoder.cn/tencent-weread-refcookie?uid=您的userVid ]`</span>,<br>          &#123; <span class="hljs-attr">userVid</span>: uid, userInfo &#125;<br>        )<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">error</span>()<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">verifyData</span>(refresh)) &#123;   <span class="hljs-comment">// 刷新请求</span><br>      <span class="hljs-keyword">let</span> <span class="hljs-attr">req</span>: any<br>      <span class="hljs-keyword">if</span> (!(<span class="hljs-keyword">await</span> <span class="hljs-title class_">CookiesApi</span>.<span class="hljs-title function_">verifyRefresh</span>(refresh))) &#123;<br>        <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">success</span>(<span class="hljs-string">&quot;Cookie不需要刷新&quot;</span>)<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">await</span> <span class="hljs-title class_">CookiesApi</span>.<span class="hljs-title function_">refCookie</span>(refresh)) ? msgServer.<span class="hljs-title function_">success</span>(<span class="hljs-string">&quot;刷新Cookie成功&quot;</span>) : msgServer.<span class="hljs-title function_">error</span>()<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">failed</span>(<span class="hljs-string">&quot;搞咩! 传的什么狗屁参数!&quot;</span>);<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>    <span class="hljs-keyword">return</span> msgServer.<span class="hljs-title function_">error</span>()<br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取数据库访问器</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> db = cloud.<span class="hljs-title function_">database</span>().<span class="hljs-title function_">collection</span>(<span class="hljs-string">&#x27;tc_tencent_wxread&#x27;</span>);<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * cookies格式工具</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CookieUtil</span> = &#123;<br>  <span class="hljs-title class_">StringToJson</span>: <span class="hljs-function">(<span class="hljs-params">cookiesString: string</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> cookieGroup = cookiesString.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;; &#x27;</span>)<br>    <span class="hljs-keyword">const</span> cookieJson = &#123;&#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; cookieGroup.<span class="hljs-property">length</span>; i++) &#123;<br>      <span class="hljs-keyword">const</span> cookieGroupJson = cookieGroup[i].<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;=&#x27;</span>)<br>      cookieJson[cookieGroupJson[<span class="hljs-number">0</span>]] = cookieGroupJson.<span class="hljs-property">length</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;&#x27;</span> : cookieGroupJson[<span class="hljs-number">1</span>]<br>    &#125;<br>    <span class="hljs-keyword">return</span> cookieJson<br>  &#125;,<br>  <span class="hljs-title class_">JsonToString</span>: <span class="hljs-function">(<span class="hljs-params">cookiesJson: object</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> keyValuePairs = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> cookiesJson) &#123;<br>      <span class="hljs-keyword">if</span> (cookiesJson.<span class="hljs-title function_">hasOwnProperty</span>(key)) &#123;<br>        <span class="hljs-keyword">const</span> value = cookiesJson[key];<br>        keyValuePairs.<span class="hljs-title function_">push</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span>=<span class="hljs-subst">$&#123;value&#125;</span>`</span>);<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> keyValuePairs.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;; &#x27;</span>);<br>  &#125;,<br>  <span class="hljs-title class_">WebArrayToString</span>: <span class="hljs-function">(<span class="hljs-params">cookiesArray: <span class="hljs-built_in">Array</span>&lt;string&gt;, cookiesString: string</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> cookieJson = <span class="hljs-title class_">CookieUtil</span>.<span class="hljs-title class_">StringToJson</span>(cookiesString)<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> cookie <span class="hljs-keyword">of</span> cookiesArray) &#123;<br>      <span class="hljs-keyword">const</span> <span class="hljs-attr">refresh</span>: <span class="hljs-title class_">Array</span>&lt;string&gt; = cookie.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;; &#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;=&#x27;</span>)<br>      cookieJson[refresh[<span class="hljs-number">0</span>]] = refresh[<span class="hljs-number">1</span>]<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">CookieUtil</span>.<span class="hljs-title class_">JsonToString</span>(cookieJson)<br>  &#125;,<br>  <span class="hljs-title class_">StringToArray</span>: <span class="hljs-function">(<span class="hljs-params">cookiesString: string</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> cookiesString.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;; &#x27;</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 全局变量。不合理, 但是能减少云函数单文件代码量</span><br><span class="hljs-keyword">var</span> globalCookies = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">var</span> <span class="hljs-title function_">globalHeaders</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-title class_">Cookie</span>: <span class="hljs-title class_">CookieUtil</span>.<span class="hljs-title class_">StringToArray</span>(globalCookies), <span class="hljs-comment">// 传入的 Cookie 数组</span><br>    <span class="hljs-title class_">Referer</span>: <span class="hljs-string">&#x27;https://weread.qq.com/&#x27;</span>,<br>    <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="hljs-string">&#x27;*&#x27;</span>,<br>    <span class="hljs-string">&#x27;Access-Control-Allow-Methods&#x27;</span>: <span class="hljs-string">&#x27;*&#x27;</span>,<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 微信读书API方法</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CookiesApi</span> = &#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 获取用户信息</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@uid</span>: 微信Cookie[&#x27;wr_vid&#x27;]</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">getUserInfo</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> userInfo = &#123; <span class="hljs-string">&#x27;userVid&#x27;</span>: <span class="hljs-string">&quot;&quot;</span> &#125;<br>    <span class="hljs-keyword">await</span> axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;https://weread.qq.com/web/user?userVid=&#x27;</span> + uid, &#123; <span class="hljs-attr">headers</span>: <span class="hljs-title function_">globalHeaders</span>() &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123;<br>      userInfo = e.<span class="hljs-property">data</span><br>    &#125;)<br>    <span class="hljs-keyword">return</span> userInfo<br>  &#125;,<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 验证Cookie是否存活</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@uid</span>: 微信Cookie[&#x27;wr_vid&#x27;]</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">verifyAlive</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> cookie = (<span class="hljs-keyword">await</span> userServer.<span class="hljs-title function_">getUserCookie</span>(uid))<br>    globalCookies = cookie<br>    <span class="hljs-keyword">let</span> userInfo = <span class="hljs-keyword">await</span> <span class="hljs-title class_">CookiesApi</span>.<span class="hljs-title function_">getUserInfo</span>(uid)<br>    <span class="hljs-keyword">return</span> (<span class="hljs-title class_">String</span>)(userInfo[<span class="hljs-string">&#x27;userVid&#x27;</span>]).<span class="hljs-title function_">includes</span>(uid)<br>  &#125;,<br>  <span class="hljs-comment">// 判断是否需要刷新 Cookie</span><br>  <span class="hljs-attr">verifyRefresh</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> time = (<span class="hljs-keyword">await</span> userServer.<span class="hljs-title function_">getUserCookieTime</span>(uid))<br>    <span class="hljs-keyword">if</span> ( !(<span class="hljs-keyword">await</span> <span class="hljs-title class_">CookiesApi</span>.<span class="hljs-title function_">verifyAlive</span>(uid)) || (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()).<span class="hljs-title function_">valueOf</span>() - time &gt;= <span class="hljs-number">3600000</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125;,<br>  <span class="hljs-comment">// 刷新 Cookie 的函数，模拟发送请求获取新 Cookie</span><br>  <span class="hljs-attr">refCookie</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> axios.<span class="hljs-title function_">head</span>(<span class="hljs-string">&#x27;https://weread.qq.com&#x27;</span>, &#123; <span class="hljs-attr">headers</span>: <span class="hljs-title function_">globalHeaders</span>() &#125;);<br>      <span class="hljs-comment">// if (response.status === 200) &#123;</span><br>      <span class="hljs-comment">//   return true</span><br>      <span class="hljs-comment">// &#125;</span><br>      <span class="hljs-keyword">const</span> newCookies = response.<span class="hljs-property">headers</span>[<span class="hljs-string">&#x27;set-cookie&#x27;</span>]<br>      <span class="hljs-keyword">if</span> (!newCookies) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>      &#125;<br>      globalCookies = <span class="hljs-title class_">CookieUtil</span>.<span class="hljs-title class_">WebArrayToString</span>(newCookies, globalCookies);<br>      <span class="hljs-keyword">return</span> (<span class="hljs-keyword">await</span> userServer.<span class="hljs-title function_">upUserCookie</span>(uid)) ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span><br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 数据库服务层。 呵, JS哪来的服务层</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> userServer = &#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 验证数据库是否存在用户</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@uid</span>: 微信Cookie[&#x27;wr_vid&#x27;]</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span>: &#123;boolean&#125;</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">verifyUser</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> (<span class="hljs-keyword">await</span> db.<span class="hljs-title function_">where</span>(&#123; <span class="hljs-string">&#x27;userVid&#x27;</span>: uid &#125;).<span class="hljs-title function_">count</span>()).<span class="hljs-property">total</span> &gt; <span class="hljs-number">0</span><br>  &#125;,<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 获取用户Cookie</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@uid</span>: 微信Cookie[&#x27;wr_vid&#x27;]</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">getUserCookie</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> get = (<span class="hljs-keyword">await</span> db.<span class="hljs-title function_">where</span>(&#123; <span class="hljs-string">&#x27;userVid&#x27;</span>: uid &#125;).<span class="hljs-title function_">limit</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">get</span>())<br>    <span class="hljs-keyword">return</span> get.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;cookies&#x27;</span>]<br>  &#125;,<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 获取用户CookieTime</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@uid</span>: 微信Cookie[&#x27;wr_vid&#x27;]</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">getUserCookieTime</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> get = (<span class="hljs-keyword">await</span> db.<span class="hljs-title function_">where</span>(&#123; <span class="hljs-string">&#x27;userVid&#x27;</span>: uid &#125;).<span class="hljs-title function_">limit</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">get</span>())<br>    <span class="hljs-keyword">return</span> get.<span class="hljs-property">data</span>[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;cookies_uptime&#x27;</span>]<br>  &#125;,<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 更新用户Cookie</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">upUserCookie</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">uid</span>: string) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> (<span class="hljs-keyword">await</span> db.<span class="hljs-title function_">where</span>(&#123;<span class="hljs-string">&#x27;userVid&#x27;</span>: uid&#125;).<span class="hljs-title function_">limit</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">update</span>(&#123; <span class="hljs-attr">cookies</span>: globalCookies, <span class="hljs-attr">cookies_uptime</span>: (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()).<span class="hljs-title function_">valueOf</span>(), <span class="hljs-attr">cookies_life</span>: <span class="hljs-literal">true</span> &#125;)).<span class="hljs-property">ok</span><br>  &#125;,<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 新增数据库用户信息</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">addUser</span>: <span class="hljs-keyword">async</span> (<span class="hljs-attr">userData</span>: <span class="hljs-title class_">WxReadUser</span>) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-attr">add</span>: any<br>    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">await</span> userServer.<span class="hljs-title function_">verifyUser</span>(userData.<span class="hljs-property">userVid</span>))) &#123;<br>      add = (<span class="hljs-keyword">await</span> db.<span class="hljs-title function_">where</span>(&#123;<span class="hljs-string">&#x27;userVid&#x27;</span>: userData.<span class="hljs-property">userVid</span>&#125;).<span class="hljs-title function_">limit</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">update</span>(userData))<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      add = (<span class="hljs-keyword">await</span> db.<span class="hljs-title function_">add</span>(userData))<br>    &#125;<br>    <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">answer</span>: add.<span class="hljs-property">ok</span>, <span class="hljs-attr">id</span>: add.<span class="hljs-property">upsertId</span> &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 回执服务层</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> msgServer = &#123;<br>  <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">msg: string, data: any = &#123;&#125;</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123; <span class="hljs-attr">statusCode</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">event</span>: <span class="hljs-string">&quot;操作成功&quot;</span>, <span class="hljs-attr">message</span>: msg, data &#125;)<br>  &#125;,<br>  <span class="hljs-attr">failed</span>: <span class="hljs-function">(<span class="hljs-params">msg: string</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123; <span class="hljs-attr">statusCode</span>: <span class="hljs-number">400</span>, <span class="hljs-attr">event</span>: <span class="hljs-string">&quot;操作失败&quot;</span>, <span class="hljs-attr">message</span>: msg &#125;)<br>  &#125;,<br>  <span class="hljs-attr">error</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123; <span class="hljs-attr">statusCode</span>: <span class="hljs-number">500</span>, <span class="hljs-attr">event</span>: <span class="hljs-string">&quot;程序错误&quot;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;请联系钟意, 必应搜索钟意博客。&quot;</span> &#125;)<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 微信用户对象接口</span><br><span class="hljs-comment"> */</span><br>interface <span class="hljs-title class_">WxReadUser</span> &#123;<br>  <span class="hljs-string">&#x27;userVid&#x27;</span>: string,<br>  <span class="hljs-string">&#x27;userInfo&#x27;</span>?: any,<br>  <span class="hljs-string">&#x27;cookies&#x27;</span>: string,<br>  <span class="hljs-string">&#x27;cookies_uptime&#x27;</span>?: number,<br>  <span class="hljs-string">&#x27;cookies_life&#x27;</span>?: boolean<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">verifyData</span> = (<span class="hljs-params">data: any</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (data === <span class="hljs-literal">null</span> || data === [] || data === &#123;&#125; || data === <span class="hljs-literal">undefined</span> || data === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (data.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><ul><li>获取自己的微信读书信息</li><li>下载微信读书的书籍</li><li>导出书单信息</li><li>带出读书笔记</li><li>自动阅读( 这个功能有什么用? )</li></ul><div class="tag-plugin link dis-select"><a class="link-card plain" title="自动阅读微信读书" href="https://blog.thatcoder.cn/Tencent-WxRead-Daily/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">自动阅读微信读书</span><span class="cap link footnote">https://blog.thatcoder.cn/Tencent-WxRead-Daily/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div>]]></content>
    
    
    <summary type="html">实现微信读书的Cookies在生命结束后自动刷新</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Tencent" scheme="https://blog.thatcoder.cn/tags/Tencent/"/>
    
  </entry>
  
  <entry>
    <title>Linux 挂载磁盘</title>
    <link href="https://blog.thatcoder.cn/Linux-Add-Device/"/>
    <id>https://blog.thatcoder.cn/Linux-Add-Device/</id>
    <published>2023-09-08T11:23:00.000Z</published>
    <updated>2023-09-19T17:14:55.054Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大致步骤"><a href="#大致步骤" class="headerlink" title="大致步骤"></a>大致步骤</h2><ol><li>准备挂载目录</li><li>磁盘分区</li><li>格式化分区</li><li>挂载磁盘</li></ol><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><p>没啥好说的, 看你喜欢啥名字</p><figure class="highlight bash"><figcaption><span>创建目录</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /extra<br></code></pre></td></tr></table></figure><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>先查看磁盘是否需要分区</p><figure class="highlight bash"><figcaption><span>磁盘信息</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fdisk -l<br></code></pre></td></tr></table></figure><details class="tag-plugin colorful folding" ><summary><span>查看需要分区的 `Device Boot`</span></summary><div class="body"><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202309131910829.png" alt="fdisk -l 打印信息" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">fdisk -l 打印信息</span></div></div></div></details><figure class="highlight bash"><figcaption><span>开始分区</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 根据你的 Device Boot 更改 /dev/vda</span><br><br>fdisk /dev/vda<br><br><span class="hljs-comment"># 根据提示依次进行以下输入</span><br><span class="hljs-comment"># n、p、1、回车、回车、wq</span><br></code></pre></td></tr></table></figure><p>再次打印磁盘信息会有多一个区</p><h2 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h2><figure class="highlight bash"><figcaption><span>格式化分区</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 这里填多出来的那个 Device Boot</span><br><br>mkfs.ext4 /dev/vda1<br></code></pre></td></tr></table></figure><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><p>这样修改&#x2F;etc&#x2F;fstab下次重启就不会丢失挂载信息</p><figure class="highlight bash"><figcaption><span>挂载</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># /dev/vda1 和 /extra 还是根据你的来</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/vda1 /extra ext4 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab<br></code></pre></td></tr></table></figure><h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h2><p>顺手记录几种查看磁盘UUID方法</p><figure class="highlight bash"><figcaption><span>查看UUID</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 块设备信息 树形</span><br>lsblk -o name,mountpoint,size,uuid<br><span class="hljs-comment"># 查看/etc/fstab 文件</span><br><span class="hljs-built_in">cat</span> /etc/fstab<br><span class="hljs-comment"># 块设备信息</span><br>blkid<br><span class="hljs-built_in">ls</span> -lh /dev/disk/by-uuid/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">备份一下Linux挂载磁盘方法, 盘要满了 淦</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Linux" scheme="https://blog.thatcoder.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Stellar 提高时间线适配范围</title>
    <link href="https://blog.thatcoder.cn/Stellar-Timeline-More/"/>
    <id>https://blog.thatcoder.cn/Stellar-Timeline-More/</id>
    <published>2023-08-19T02:00:00.000Z</published>
    <updated>2024-01-07T22:03:52.919Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>注意：迁移1.22.1后本文作废，已完成便于主题更新的方案，待写文档中</strong></p><p>某天想把其它app的动态放进时间线, 但每个app接口都返回不同的json数据格式, 即使同一个app不同提取项目也是不同的json数据格式,<br>便不了了之。<br>直到前几天萌生一个想法: 通过传入有效路径匹配提取对应的json数据。但是这样代码太长就不推送了, 也需要的人自己加进去(<br>不影响主题升级)</p><h2 id="目前成果"><a href="#目前成果" class="headerlink" title="目前成果"></a>目前成果</h2><ul><li>编写路径即可匹配数据</li><li>编写路径时赋予路径类型可生成对应类型组件</li><li>允许多个api聚合到一个时间线展示</li><li>有时间字段可按照时间排序</li><li>排除包含的内容、正则匹配替换内容</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202308131428294.png" alt="聚合的时间线" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">聚合的时间线</span></div></div><h2 id="加入主题"><a href="#加入主题" class="headerlink" title="加入主题"></a>加入主题</h2><blockquote></blockquote><p>经常使用git的coder直接看提交吧 <a href="https://github.com/ThatCoders/hexo-theme-stellar/commit/96bcb51d4b878766ea0e5b98a918e7052a815f24">[add] 添加timeline功能: api自适应</a><br><strong>注意最后一个custom.js非终版, 以下方的为准</strong></p><p><strong>路径以stellar主题为根</strong></p><ol><li>文件路径: _config.yml  <strong>一处</strong></li></ol><figure class="highlight diff"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs diff">plugins:<br>  stellar:<br>    ......<br><span class="hljs-addition">+   custom: /js/plugins/custom.js</span><br></code></pre></td></tr></table></figure><ol start="2"><li>文件路径: layout&#x2F;_partial&#x2F;widgets&#x2F;timeline.ejs  <strong>15行一处</strong></li></ol><figure class="highlight diff"><figcaption><span>timeline.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-      [&#x27;api&#x27;, &#x27;user&#x27;, &#x27;hide&#x27;, &#x27;limit&#x27;].forEach(key =&gt; &#123;</span><br><span class="hljs-addition">+      [&#x27;api&#x27;, &#x27;user&#x27;, &#x27;hide&#x27;, &#x27;limit&#x27;, &#x27;config&#x27;].forEach(key =&gt; &#123;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>文件路径: scripts&#x2F;tags&#x2F;lib&#x2F;timeline.js  <strong>38,45行两处</strong></li></ol><figure class="highlight diff"><figcaption><span>timeline.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs diff"># 38行<br><span class="hljs-deletion">-      args = ctx.args.map(args, [&#x27;api&#x27;, &#x27;user&#x27;, &#x27;type&#x27;, &#x27;limit&#x27;, &#x27;hide&#x27;)</span><br><span class="hljs-addition">+      args = ctx.args.map(args, [&#x27;api&#x27;, &#x27;user&#x27;, &#x27;type&#x27;, &#x27;limit&#x27;, &#x27;hide&#x27;, &#x27;config&#x27;])</span><br># 45行<br><span class="hljs-deletion">-      el += &#x27; &#x27; + ctx.args.joinTags(args, [&#x27;api&#x27;, &#x27;user&#x27;, &#x27;limit&#x27;, &#x27;hide&#x27;]).join(&#x27; &#x27;)</span><br><span class="hljs-addition">+      el += &#x27; &#x27; + ctx.args.joinTags(args, [&#x27;api&#x27;, &#x27;user&#x27;, &#x27;limit&#x27;, &#x27;hide&#x27;, &#x27;config&#x27;]).join(&#x27; &#x27;)</span><br></code></pre></td></tr></table></figure><ol start="4"><li>文件路径: source&#x2F;js&#x2F;plugins&#x2F;custom.js 添加一整个JS文件<div class="tag-plugin link dis-select"><a class="link-card plain" title="custom.js-持续更新" href="https://kedao.thatcoder.cn/#s/9kZW_6Eg" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">custom.js-持续更新</span><span class="cap link footnote">https://kedao.thatcoder.cn/#s/9kZW_6Eg</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div></li></ol><h2 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h2><p>作为一个timeline插件形式, 所以使用和正常的timeline一样, 只是多了一个config。</p><p><strong>有点抽象, 我尽能力表述清楚</strong></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>以下是一个基本使用格式</p><div class="tag-plugin tabs"id="tab_2"><div class="nav-tabs"><div class="tab active"><a href="#tab_2-1">简单使用</a></div><div class="tab"><a href="#tab_2-2">示例代码</a></div><div class="tab"><a href="#tab_2-3">数据代码</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_2-1"><div class="tag-plugin timeline ds-custom" api="https://blog.thatcoder.cn/custom/test/timetest1.json"></div></div><div class="tab-pane" id="tab_2-2"><figure class="highlight markdown"><figcaption><span>xxx.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% timeline api:https://blog.thatcoder.cn/custom/test/timetest1.json type:custom config:&quot;[&#123; &#x27;type&#x27;: &#x27;root&#x27;, &#x27;src&#x27;: &#x27;data&#x27; &#125;, &#123; &#x27;type&#x27;: &#x27;msg&#x27;, &#x27;src&#x27;: &#x27;content|markdown:true&#x27; &#125;, &#123; &#x27;type&#x27;: &#x27;tags&#x27;, &#x27;src&#x27;: &#x27;map:talkTags&#x27; &#125;,&#123; &#x27;type&#x27;: &#x27;timestamp&#x27;, &#x27;src&#x27;: &#x27;time时间戳&#x27; &#125;]&quot; %&#125;<br>&#123;% endtimeline %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-pane" id="tab_2-3"><figure class="highlight json"><figcaption><span>timetest1.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;timetest1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;talkTags&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;测试&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;BUG制造者&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是timetest1的**第一个数据**, 时间为2023-08-11&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;time时间戳&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1691740257&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;talkTags&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;摆烂&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;佛祖保佑&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;永无BUG&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是timetest1的第二个数据, 时间为2023-06-06&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;time时间戳&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1686037857&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;talkTags&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;再看一眼&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;就会爆炸&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是timetest1的第三个数据, 时间为2023-07-06 \n再看一眼就会爆炸, 应该排除&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;time时间戳&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1688629857&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure></div></div></div><h3 id="关于config"><a href="#关于config" class="headerlink" title="关于config"></a>关于config</h3><blockquote><p>我们现在把config单独拿出来, 它就是一个数组, 里面有每个配置对象。</p></blockquote><figure class="highlight markdown"><figcaption><span>xxx.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[<br>  &#123;&#x27;type&#x27;: &#x27;组件名&#x27;, &#x27;src&#x27;:&#x27;指令:参数|指令:参数&#x27; &#125;<br>]<br></code></pre></td></tr></table></figure><p>组件名和指令细分在下文<br><strong>现在需要注意的是以下几点:</strong></p><ul><li>&#96;</li></ul>]]></content>
    
    
    <summary type="html">企图减少个人去适配时间线api的成本</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Stellar" scheme="https://blog.thatcoder.cn/tags/Stellar/"/>
    
  </entry>
  
  <entry>
    <title>我数据价值 2082 元的 MongoDB 被攻击</title>
    <link href="https://blog.thatcoder.cn/MongoDB%20%E8%A2%AB%E6%94%BB%E5%87%BB/"/>
    <id>https://blog.thatcoder.cn/MongoDB%20%E8%A2%AB%E6%94%BB%E5%87%BB/</id>
    <published>2023-08-05T15:00:00.000Z</published>
    <updated>2023-09-18T15:28:05.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一个小故事"><a href="#一个小故事" class="headerlink" title="一个小故事"></a>一个小故事</h2><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header">2023.08.05 凌晨</div><div class="body fs14"><p>随手在闲置服务器安装了一个 MongoDB<br>用于临时测试给QQ机器人添加的Key功能是否有效<br>测试完便下机睡觉<br><img src="https://upyun.thatcdn.cn/myself/typora/202308060135017.png"></p></div></div><div class="timenode" index="1"><div class="header">2023.08.05 上午十点</div><div class="body fs14"><p>在我前往另一个城市的时候, 发生了</p></div></div><div class="timenode" index="2"><div class="header">2023.08.05 晚上</div><div class="body fs14"><p>和朋友聚完回来准备完善测试再push<br>发现携带key方法挂了, 开始排查代码<br>…<br>就刚写没一点的破代码有个屁BUG<br>排查数据库的key, <strong>key没了</strong><br>…<br><strong>不!!! 是库没了!!!</strong></p></div></div></div><h2 id="生活的小插曲啦"><a href="#生活的小插曲啦" class="headerlink" title="生活的小插曲啦"></a>生活的小插曲啦</h2><ul><li><p>这是攻击者留的唯一库(代码直观展示)<br>‘您的所有数据都已备份。您必须支付0.01 比特币<br>至—博主和谐—在48小时内，您的数据将被公开披露和删除。（更多信息：转到—博主和谐—）付款后发送邮件给我们：—博主和谐—我们将提供一个链接供您下载您的数据。您的DBCODE是：—博主和谐—‘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">db.getCollection(&quot;READ__ME_TO_RECOVER_YOUR_DATA&quot;).insert([ &#123;<br>_id: ObjectId(&quot;64cdcb2a0f2c98e1b7c19017&quot;),<br>content: &quot;All your data is backed up. You must pay 0.01 BTC to ---博主和谐--- In 48 hours, your data will be publicly disclosed and deleted. (more information: go to ---博主和谐---)After paying send mail to us: ---博主和谐--- and we will provide a link for you to download your data. Your DBCODE is: ---博主和谐---&quot;<br>&#125; ]);<br></code></pre></td></tr></table></figure></li><li><p>这是日志留下的痕迹</p><blockquote><p>算上东八区, 老贼, 在我上高铁时候下手, 怪不得车上没睡好</p></blockquote><p><img src="https://upyun.thatcdn.cn/myself/typora/202308060137202.png"></p></li><li><p>这是攻击者IP(当然是IP伪造欺骗)<br><img src="https://upyun.thatcdn.cn/myself/typora/202308060140232.png"></p></li><li><p>这是去给定网址的回执(已翻译)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">请注意以下几点：<br><br>我们知道您已经访问了本指南。<br>恢复您的数据的唯一方法是付款。我们不会免费或打折提供数据。<br>如果您决定不检索数据，我们可能会在在线市场上出售您的数据库，向您的用户披露<br>并要求他们付款，在在线违规论坛中披露，或删除它。<br>如果适用，我们将联系您所在国家的欧盟数据保护法机构。<br><br>如果您无法联系我们，请访问https://xxxxxxx/并下载会话信使。<br>使用以下ID添加我们，以进行流畅的对话和更好的谈判，<br>***不要忘记提及分配给您的DBCODE***：<br>xxxxxxxxxxxxxxxx<br></code></pre></td></tr></table></figure></li></ul><h2 id="结个尾"><a href="#结个尾" class="headerlink" title="结个尾"></a>结个尾</h2><p>代码虽然开源但config里面还是127.0.0.1, 应该是自动化主机端口扫描的结果(临时用数据库没给密码)</p><p>好在是临时用的服务器与数据库, 0.01比特币(2082元)算起步价了吧, 没有比我这更廉价的数据了哈哈哈</p><p><strong>大家记得做好安全措施</strong></p><p><strong>有趣的是, 我没在日志看到任何那个时间段有关数据库的备份相关操作, 哪怕是查询</strong></p>]]></content>
    
    
    <summary type="html">不加密真的会被攻击</summary>
    
    
    
    <category term="生活" scheme="https://blog.thatcoder.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="随笔" scheme="https://blog.thatcoder.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 安装使用 Clash</title>
    <link href="https://blog.thatcoder.cn/Clash%20For%20Linux/"/>
    <id>https://blog.thatcoder.cn/Clash%20For%20Linux/</id>
    <published>2023-07-29T16:00:00.000Z</published>
    <updated>2023-07-29T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>适用范围建立在使用过 window IOS 下的 Clash 为基础的半安装教程</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>取出之前设备配置</li><li>安装配置Clash</li><li>注册为系统服务</li><li>在线管理Clash</li></ol><h2 id="取出配置"><a href="#取出配置" class="headerlink" title="取出配置"></a>取出配置</h2><p>备好两个文件</p><ol><li>Country.mmdb</li><li>profiles&#x2F;xxxxxxxx.yml</li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202307301651854.png" alt="打开目录找到两个文件" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">打开目录找到两个文件</span></div></div><h2 id="安配-Clash"><a href="#安配-Clash" class="headerlink" title="安配 Clash"></a>安配 Clash</h2><h3 id="安装-Clash"><a href="#安装-Clash" class="headerlink" title="安装 Clash"></a>安装 Clash</h3><p>下载解压并命名为 clash</p><ul><li>解压<ul><li><div class="tag-plugin copy"><input class="copy-area" id="copy_1" value="gunzip xxxx.gz"><button class="copy-btn" onclick="util.copy(&quot;copy_1&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ul></li><li>重命名<ul><li><div class="tag-plugin copy"><input class="copy-area" id="copy_2" value="mv clash-linux-amd64 clash"><button class="copy-btn" onclick="util.copy(&quot;copy_2&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ul></li><li>移动到 &#x2F;usr&#x2F;local&#x2F;bin&#x2F; 目录下 (方便在任何位置调用Clash)<ul><li><div class="tag-plugin copy"><input class="copy-area" id="copy_3" value="mv clash /usr/local/bin/"><button class="copy-btn" onclick="util.copy(&quot;copy_3&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ul></li><li>查看版本<ul><li><div class="tag-plugin copy"><input class="copy-area" id="copy_4" value="uname -m"><button class="copy-btn" onclick="util.copy(&quot;copy_4&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ul></li><li><a href="https://github.com/Dreamacro/clash/releases">下载地址</a><div class="tag-plugin timeline ds-timeline" api="https://api.github.xaox.cc/repos/Dreamacro/clash/releases?per_page=1"></div></li></ul><h3 id="配置-Clash"><a href="#配置-Clash" class="headerlink" title="配置 Clash"></a>配置 Clash</h3><ol><li>首次启动<br>命令行输入clash即可, 一般会提示失败(不重要), 目的是生成配置文件</li><li>找到配置目录<div class="tag-plugin copy"><input class="copy-area" id="copy_5" value="find / -name clash"><button class="copy-btn" onclick="util.copy(&quot;copy_5&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div>一般在 &#x2F;用户&#x2F;.config&#x2F;clash&#x2F; 即 &#x2F;root&#x2F;.config&#x2F;clash<div class="tag-plugin copy"><input class="copy-area" id="copy_6" value="cd /root/.config/clash"><button class="copy-btn" onclick="util.copy(&quot;copy_6&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li>放置全球IP库<br>把之前准备的 Country.mmdb 放进去</li><li>写配置文件<br>创建一个 config.yaml</li></ol><figure class="highlight yaml"><figcaption><span>config.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># port of HTTP</span><br><span class="hljs-comment"># port: 7890  ## 解释掉该行，使用mixed-port</span><br><br><span class="hljs-comment"># port of SOCKS5</span><br><span class="hljs-comment"># socks-port: 7891 ## 解释掉该行，使用mixed-port</span><br><span class="hljs-attr">mixed-port:</span> <span class="hljs-number">52443</span> <span class="hljs-comment">## 提供统一的端口</span><br><br><span class="hljs-attr">authentication:</span> <span class="hljs-comment">## 增加配置，设置账号和密码</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;username:password&quot;</span><br><br><span class="hljs-comment"># web ui 配置</span><br><span class="hljs-attr">external-controller:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">:52444</span>  <span class="hljs-comment"># web ui 监听地址</span><br><span class="hljs-attr">secret:</span> <span class="hljs-string">&quot;xxxxxxxxxxxxx&quot;</span>  <span class="hljs-comment"># web ui 密钥</span><br><br><span class="hljs-comment"># allow-lan: false</span><br><span class="hljs-attr">allow-lan:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">## 允许局域网连接</span><br><br><span class="hljs-comment"># Rule / Global/ DIRECT (default is Rule)</span><br><span class="hljs-attr">mode:</span> <span class="hljs-string">rule</span><br><br><span class="hljs-comment"># external-ui: dashboard ## 关闭external</span><br><br><span class="hljs-comment">## 以下贴订阅的配置</span><br><br></code></pre></td></tr></table></figure><p>接着把之前准备的 &#x2F;profiles&#x2F;xxxxxxxx.yml 的文件dns开始到结尾的配置贴到 config.yaml 后面.<br>window与linux配置不同的是前者读取profiles下的列表, 后者直接读取 config.yaml.</p><h2 id="注册为系统服务"><a href="#注册为系统服务" class="headerlink" title="注册为系统服务"></a>注册为系统服务</h2><p>在&#x2F;etc&#x2F;systemd&#x2F;system目录下创建clash.service文件</p><figure class="highlight yaml"><figcaption><span>clash.service</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">Unit</span>]<br><span class="hljs-string">Description=Clash</span> <span class="hljs-string">Service</span><br><span class="hljs-string">After=network.target</span><br><br>[<span class="hljs-string">Service</span>]<br><span class="hljs-string">Type=simple</span><br><span class="hljs-string">User=root</span><br><span class="hljs-string">ExecStart=/usr/local/bin/clash</span><br><span class="hljs-string">Restart=on-failure</span><br><br>[<span class="hljs-string">Install</span>]<br><span class="hljs-string">WantedBy=multi-user.target</span><br></code></pre></td></tr></table></figure><p>以后就能直接使用熟悉的服务命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable clash  # 开机自启<br>systemctl start clash<br>systemctl restart clash<br>systemctl status clash<br>systemctl stop clash<br></code></pre></td></tr></table></figure><h2 id="在线管理"><a href="#在线管理" class="headerlink" title="在线管理"></a>在线管理</h2><p>有两个选择, 根据config文件的 web ui 配置, 使用在线网站管理</p><ol><li>yacd<div class="tag-plugin link dis-select"><a class="link-card plain" title="yacd" href="http://yacd.haishan.me/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">yacd</span><span class="cap link footnote">http://yacd.haishan.me/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><img src="https://upyun.thatcdn.cn/myself/typora/202307301742787.png"></li></ol><p>如果你不用IP,已经反向代理使用域名并且使用Https, 也可以使用下面的https的yacd</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="博主的搭建的yacd" href="https://clash.thatcoder.cn/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">博主的搭建的yacd</span><span class="cap link footnote">https://clash.thatcoder.cn/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><ol start="2"><li>razord<div class="tag-plugin link dis-select"><a class="link-card plain" title="razord提供的(也许要科学上网)" href="http://clash.razord.top/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">razord提供的(也许要科学上网)</span><span class="cap link footnote">http://clash.razord.top/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><img src="https://upyun.thatcdn.cn/myself/typora/202307301744235.png"></li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p><strong>注意端口自行定义与放行</strong></p>]]></content>
    
    
    <summary type="html"> Clash For Linux + Web UI 安装配置使用备忘录</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Clash" scheme="https://blog.thatcoder.cn/tags/Clash/"/>
    
  </entry>
  
  <entry>
    <title>《原神》私有服务器搭建</title>
    <link href="https://blog.thatcoder.cn/game/Genshin%20Impact/"/>
    <id>https://blog.thatcoder.cn/game/Genshin%20Impact/</id>
    <published>2023-07-10T10:00:00.000Z</published>
    <updated>2023-12-30T20:26:32.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>退坑卖号两年, 最近网上冲浪的我看到宵宫传说任务二想来过剧情, 遂想起 grasscutter(开源的原神私服项目,简称 割草机). 不得不说<br>grasscutter 相比之前已经进步很多.</p><h2 id="大致步骤"><a href="#大致步骤" class="headerlink" title="大致步骤"></a>大致步骤</h2><ol><li>安装mongodb数据库 <img src="https://upyun.thatcdn.cn/myself/typora/202307171812128.png" style="float:right;width: 180px;" /></li><li>配置cultivation</li><li>配置config (搭建在服务器或本地的区别就在这里)</li><li>下载游戏本体</li><li>启动cultivation</li></ol><ul><li>grasscutter: 相当于游戏的服务器</li><li>cultivation: 相当于游戏的代理启动器</li></ul><h2 id="下载游戏本体"><a href="#下载游戏本体" class="headerlink" title="下载游戏本体"></a>下载游戏本体</h2><p>下载游戏本体是最后一步, 放在第一步考虑的是下载太久, 但放在最后是前面都没耐心配置就没必要下载了不是吗<br>之前官服也可以, 不用额外下载. 但现版本grasscutter对应的是3.7版本资源, 官服已经迈入3.8, 所以需要下载3.7版本的国际服.</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="国际服3.7" href="https://d3ln624mszu7ty.cloudfront.net/client_app/download/pc_zip/20230513200104_2odHBzbUAP5IOIvE/GenshinImpact_3.7.0.zip" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">国际服3.7</span><span class="cap link footnote">https://d3ln624mszu7ty.cloudfront.net/client_app/download/pc_zip/20230513200104_2odHBzbUAP5IOIvE/GenshinImpact_3.7.0.zip</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="安装mongodb"><a href="#安装mongodb" class="headerlink" title="安装mongodb"></a>安装mongodb</h2><p>官网自行解决</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="MongoDB社区" href="https://www.mongodb.com/try/download/community" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon,desc"><div class="top"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div><span class="cap link footnote">https://www.mongodb.com/try/download/community</span></div><div class="bottom"><span class="title">MongoDB社区</span><span class="cap desc footnote"></span></div></a></div><h2 id="配置cultivation"><a href="#配置cultivation" class="headerlink" title="配置cultivation"></a>配置cultivation</h2><h3 id="下载cultivation"><a href="#下载cultivation" class="headerlink" title="下载cultivation"></a>下载cultivation</h3><p><strong>下载后缀msi的包</strong></p><div class="tag-plugin link dis-select"><a class="link-card plain" title="cultivation最新版" href="https://github.com/Grasscutters/Cultivation/releases/latest" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">cultivation最新版</span><span class="cap link footnote">https://github.com/Grasscutters/Cultivation/releases/latest</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><h3 id="配置cultivation-1"><a href="#配置cultivation-1" class="headerlink" title="配置cultivation"></a>配置cultivation</h3><h4 id="下载grasscutter-本地运行"><a href="#下载grasscutter-本地运行" class="headerlink" title="下载grasscutter(本地运行)"></a>下载grasscutter(本地运行)</h4><ol><li>大约要下载400MB左右, 下载出错可以关掉重新来.<div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202307171725483.png" alt="下载一体化" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">下载一体化</span></div></div></li><li>点击设置<br><img src="https://upyun.thatcdn.cn/myself/typora/202307171729304.png" alt="1"><br><img src="https://upyun.thatcdn.cn/myself/typora/202307171731397.png" alt="2"></li></ol><h4 id="下载grasscutter-服务器运行"><a href="#下载grasscutter-服务器运行" class="headerlink" title="下载grasscutter(服务器运行)"></a>下载grasscutter(服务器运行)</h4><p>服务器跑通自行研究, 其实可以本地编译完上传到服务器运行, 缺少resource文件夹可以走上一步本地运行的方式下载到资源. 路径大概在<br><strong>C:\Users\Administrator\AppData\Roaming\cultivation\grasscutter\resources.zip</strong></p><div class="tag-plugin link dis-select"><a class="link-card plain" title="Grasscutter最新版" href="https://github.com/Grasscutters/Grasscutter/releases/latest" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">Grasscutter最新版</span><span class="cap link footnote">https://github.com/Grasscutters/Grasscutter/releases/latest</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><p>Windows</p><figure class="highlight shell"><figcaption><span>Windows</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone --recurse-submodules https://github.com/Grasscutters/Grasscutter.git<br>cd Grasscutter<br>.\gradlew.bat # 设置开发环境<br>.\gradlew jar # 编译<br></code></pre></td></tr></table></figure><p>Linux（GNU）</p><figure class="highlight shell"><figcaption><span>Linux</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone --recurse-submodules https://github.com/Grasscutters/Grasscutter.git<br>cd Grasscutter<br>chmod +x gradlew<br>./gradlew jar # 编译<br></code></pre></td></tr></table></figure><p>你可以在项目的根目录找到输出的jar。</p><p>还有, 尊贵的Coder, Grasscutter是一个Gradle的Java项目, 您可以自定义服务器内容(目前能运营的私服就是这么干的)<br><img src="https://upyun.thatcdn.cn/myself/typora/202307171900229.png" alt="自定义java"></p><h2 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h2><p>如果是在自己电脑当服务器,自己一个人玩, 就不需要配置, 请跳过这步。</p><p>因为是一体化下载的grasscutter, 所以路径大概在 <strong>C:<br>\Users\Administrator\AppData\Roaming\cultivation\grasscutter\config.json</strong><br>需要修改几个参数</p><figure class="highlight json"><figcaption><span>config.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;bindAddress&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span> <span class="hljs-comment">//有两个, 都改成 0.0.0.0</span><br><span class="hljs-attr">&quot;accessAddress&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span>  <span class="hljs-comment">//有两个, 都改成服务器IP或者能解析到IP的域名</span><br><span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span>  <span class="hljs-comment">//有两个, 不想撞443的话改成你想要的端口, 记得端口开放</span><br></code></pre></td></tr></table></figure><h2 id="启动cultivation"><a href="#启动cultivation" class="headerlink" title="启动cultivation"></a>启动cultivation</h2><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202307171741788.png" alt="启动游戏" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">启动游戏</span></div></div><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>开此博客纯属积累相关经验记录，而且我需要有记录实证。所有记录的内容均未<br>经专业人士证实，请大家在查看时自行甄别，切勿随意传播。若有违背，本人不承担任何责任!<br>有问题找<a href="https://github.com/Grasscutters">grasscutters</a>咩! 我只负责和万叶喝茶!<br>最后祝原神越做越好, 米哈游生意兴隆!</p><p><img src="https://upyun.thatcdn.cn/myself/typora/202307171810163.gif"></p><h2 id="问题归纳"><a href="#问题归纳" class="headerlink" title="问题归纳"></a>问题归纳</h2><blockquote><p>Q: 启动grasscutter报错缺失resource资源?<br>A: 下载放到grasscutter的文件夹 <a href="https://gitlab.com/YuukiPS/GC-Resources">https://gitlab.com/YuukiPS/GC-Resources</a></p></blockquote><blockquote><p>Q: 我能当原神服务器上帝咩?<br>A: 你要的这里都有, 甚至自定义圣遗物 自定义技能. <a href="https://github.com/jie65535/GrasscutterCommandGenerator">https://github.com/jie65535/GrasscutterCommandGenerator</a></p></blockquote><blockquote><p>Q: 还有其它问题来频道交流<br>A: 点击链接加入频道【钟意博客】：<a href="https://pd.qq.com/s/6h7wytr8a">https://pd.qq.com/s/6h7wytr8a</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;p&gt;退坑卖号两年, 最近网上冲浪的我看到宵宫传说任务二想来过剧情, 遂想起 grasscutter(开源的原神私服项目,简称 割草机).</summary>
      
    
    
    
    <category term="第九艺术" scheme="https://blog.thatcoder.cn/categories/%E7%AC%AC%E4%B9%9D%E8%89%BA%E6%9C%AF/"/>
    
    
    <category term="Game" scheme="https://blog.thatcoder.cn/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>《SKY·光遇》</title>
    <link href="https://blog.thatcoder.cn/game/sky/"/>
    <id>https://blog.thatcoder.cn/game/sky/</id>
    <published>2023-06-21T16:00:00.000Z</published>
    <updated>2023-09-18T15:28:08.114Z</updated>
    
    <content type="html"><![CDATA[<p><strong>谨以此文记录光遇</strong></p><span id="more"></span><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220233849.png" data-fancybox="true"/></div></div><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" style="width:100%;" height=86 src="//music.163.com/outchain/player?type=2&id=1890669278&auto=0&height=66"></iframe><div class="tag-plugin quot"><h2 class="content" id="开端" type="icon"><a href="#开端" class="headerlink" title="开端"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">开端</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>寒冬, 大一上学年的收尾。<br>寒冬, 世界级瘟疫的开端。<br>落叶捎来讯息, 美好的大学生活埋葬在疫情之下, 比覆雪更严实。</p><p>暖春, 好在阴霾里裂开的间隙, 一束光影悄然降临, 光遇。</p><div class="tag-plugin quot"><h2 class="content" id="初遇" type="icon"><a href="#初遇" class="headerlink" title="初遇"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">初遇</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>第一次听说光遇是年前室友询问我, 怎样在国内玩光遇。我研究了一下当时只有国际服, 发现单纯游玩可以但涉及更新需要手机有谷歌套件,<br>否则更新有丢失账号的风险, 室友嫌麻烦就此作罢。我也没多少兴趣便继续投入到 Rockstar Games 的游戏《Grand Theft Auto V》和《Red<br>Dead Redemption 2》。</p><p>第二次便是入坑。 疫情下游戏荒时期, 2020.03.05日无意间看到《纪念碑谷》, 便想起陈星汉,<br>进而想起光遇。这便是快乐与遗憾的开始。很符合当天的节气: 惊蛰。</p><p>抛开游戏货币蜡烛, 回想起第一周目的游戏体验, 就像是《星际拓荒》般纯粹、干净且美好。但与太空探索的震撼与孤寂不同的是,<br>一周目碰到了几个指引我的”大佬”, 或许是加拿大人, 亦或是日本人、国人, 谁知道呢。唯一能确定的是过客, 因为没解锁聊天, 甚至没加好友。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220013163.jpg" alt="一周目通关" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">一周目通关</span></div></div><div class="tag-plugin quot"><h2 class="content" id="友人" type="icon"><a href="#友人" class="headerlink" title="友人"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">友人</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><blockquote><p>这是个主打社交的游戏, 遇到数十位性情相投的固玩直接拉满游戏体验。在疫情下大家似乎一天25小时高强度在线, 只可惜一个房间只能8人。</p></blockquote><p>第一个正式好友是”阳菜”, 一位同年级团支书。也许她刚看完《天气之子》。</p><p>第二位是”秋刀鱼”, 带我度过了新手时期。</p><p>第三位是现实高中室友LQ, 游戏里叫”朔风”, 陪我到一起淡游。</p><p>后来加了一位up的群, 认识了很多伙伴, 也在群里一起负责游戏攻略管理。有同年级吐槽光遇乐器不是88键的音乐生”病病”(<br>测试服好搭档), 同年级爱画画和找游戏bug的”小昭”, 后来好像当兵去了的”小新”, 开内衣工厂的”Atlantis.峰”, 弹琴很厉害的”婷婷”,<br>古灵精怪的”鱼鱼”(感谢给我占卜)…后面的再去回忆, 只剩下昵称…”乌拉”、”飞哥”、”小奕”、”姜妤”、”雾”、”yaa”、”陈君泽”(<br>唯一一个游戏上真名的)、”久”、”诺诺”、一些全家一起玩光遇的家庭…还有一些昵称都回忆不起, 尤其是外国友人(笑死, 太长了根本记不住,<br>甚至有些国家不是用英文)</p><p>有些印象深刻的记忆碎片: 对线台独分子(其实少部分是台独); 凌晨五点时日本妹子说”窗外的阳光有点刺眼, 我已经一个月没出门”(<br>一小时时差); 很多祝我国战胜疫情的外国玩家(虽然后来成了我们祝福他们); 疫情只能在游戏见面的爸妈和孩子(亲子玩家);<br>发黄黑脸表情就能互相确认身份的国人玩家……</p><p><strong>游戏中后期无趣且重复, 辛有他们带来欢乐与音乐, 以此可抵疫情漫长。</strong></p><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220055405.jpg" alt="日常音乐会" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">日常音乐会</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220051913.jpg" alt="日常跑图" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">日常跑图</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220054285.jpg" alt="所剩不多的截图" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">所剩不多的截图</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220055918.jpg" alt="召唤神狗" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">召唤神狗</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220226348.jpg" alt="这两张插图诠释了光遇内核" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">这两张插图诠释了光遇内核</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220226558.jpg" alt="这两张插图诠释了光遇内核" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">这两张插图诠释了光遇内核</span></div></div><div class="tag-plugin quot"><h2 class="content" id="羁绊" type="icon"><a href="#羁绊" class="headerlink" title="羁绊"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">羁绊</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>那段时间家庭情况不好, 经济亦如此。因光遇国际服充值不便, 遂干光遇代氪两个月的收入也帮助我度过这段岁月。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220041602.jpg" alt="在咸鱼代氪" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">在咸鱼代氪</span></div></div><p>光遇也让我第一次尝试游戏二创, 不过是音乐方面, 很高兴通过二创能与一些玩家有所共鸣, 同时有些收入。当然现在无法满足催更的玩家了,<br>毕竟离开光遇太久。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220046854.jpg" alt="QQ音乐" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">QQ音乐</span></div></div><div class="tag-plugin quot"><h2 class="content" id="国服" type="icon"><a href="#国服" class="headerlink" title="国服"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">国服</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>2020.07.09光遇国服开启, 安利给了两个堂妹和同学珞。 陪她们玩的差不多我也就撤了, 国服体验不太纯粹, 就不展开吐槽啦。当然也碰到些难忘的人。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220156550.jpg" alt="国服记忆" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">国服记忆</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220159574.jpg" alt="国服记忆" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">国服记忆</span></div></div><p>好像我GTA5的游轮喷漆是 SKY-20200709</p><div class="tag-plugin quot"><h2 class="content" id="存档" type="icon"><a href="#存档" class="headerlink" title="存档"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">存档</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>删除上万张相册之前, 我居然备份了这个视频在网易云音乐。</p><iframe src="//player.bilibili.com/player.html?aid=997616076&page=1&high_quality=1&danmaku=0&autoplay=0" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe><div class="tag-plugin quot"><h2 class="content" id="尾声" type="icon"><a href="#尾声" class="headerlink" title="尾声"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">尾声</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>频频落笔却一直不知如何写, 就像我想不起什么时候退游的。<br>很遗憾没好好告别, 也许正是想写下此篇的原因。<br>故事开头总是这样，适逢其会，猝不及防。 故事的结局总是这样，花开两朵，天各一方。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306220200184.jpg" alt="售出时间2020.08.13" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">售出时间2020.08.13</span></div></div><p>关于光遇. 想起什么会再回来补充。<br>感谢陈星汉团队与光遇友人。</p><p><span style="float:right">——幼稚鬼</span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;谨以此文记录光遇&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="第九艺术" scheme="https://blog.thatcoder.cn/categories/%E7%AC%AC%E4%B9%9D%E8%89%BA%E6%9C%AF/"/>
    
    
    <category term="Game" scheme="https://blog.thatcoder.cn/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu UOS统信 双显卡外接屏显示问题</title>
    <link href="https://blog.thatcoder.cn/UOS-Nvidia/"/>
    <id>https://blog.thatcoder.cn/UOS-Nvidia/</id>
    <published>2023-06-04T10:00:00.000Z</published>
    <updated>2023-12-30T20:17:08.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>23年农历年初把电脑双系统的Ubuntu换成统信UOS。安装方法是官网的<a href="https://www.7uos.com/uos-azq.html">安装工具</a>。<br>安装过程异常顺利, 但完成后遇到显示屏只亮笔记本的, 原因显卡只使用了核显(知道原因还是能救的)。并尝试如下补救方法:</p><ol><li>走原Ubuntu安装N卡驱动流程只亮了外接屏幕, 笔记本屏幕黑屏! <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_annoyed.png"/></span></li><li>加入官方微信群交流, 工作人员建议尝试UOS软件商店的驱动工具, 还是只亮笔记本的! <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_spit_blodd.png"/></span></li></ol><p>最后在第一种方法的基础上手动添加<strong>xorg.conf文件</strong>得已解决。适用基于Ubuntu与其分支系统。</p><h2 id="xorg-conf"><a href="#xorg-conf" class="headerlink" title="xorg.conf"></a>xorg.conf</h2><blockquote><p>xorg.conf文件是Linux中用来配置X Window系统的配置文件，它通常存储在&#x2F;etc&#x2F;X11&#x2F;目录下。它的主要目的是控制您的图形卡及其连接显示器的设置和选项。<br>PS: Ubuntu系统中在目录&#x2F;etc&#x2F;X11下默认已经没有了文件xorg.conf，为了方便调整显示器的分辨率，可以通过重新生文件xorg.conf来达到目的</p></blockquote><p>如下是我的xorg.conf配置, 仅作参考</p><figure class="highlight plaintext"><figcaption><span>xorg.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs editorconfig"># 定义了布局信息，包含一个名为“layout”的标识符<br># 并设置为使用&quot;NVIDIA&quot;作为屏幕0，同时“intel”处于非活动状态。<br>Section &quot;ServerLayout&quot;<br>    Identifier &quot;layout&quot;<br>    Screen 0 &quot;nvidia&quot;<br>    Inactive &quot;intel&quot;<br>EndSection<br><br># 定义了&quot;NVIDIA&quot;设备、标识符、驱动程序和总线ID等信息<br>Section &quot;Device&quot;<br>    Identifier &quot;nvidia&quot;<br>    Driver &quot;nvidia&quot;<br>    BusID  &quot;PCI:1:0:0&quot;<br>EndSection<br><br># 将&quot;NVIDIA&quot;设备和标识符链接到一起<br>Section &quot;Screen&quot;<br>    Identifier &quot;nvidia&quot;<br>    Device &quot;nvidia&quot;<br>    Option  &quot;AccelMethod&quot;  &quot;sna&quot;<br>    Option &quot;TearFree&quot; &quot;True&quot;<br>    Option &quot;Tiling&quot;   &quot;True&quot;<br>    Option &quot;SwapbuffersWait&quot; &quot;True&quot;<br>EndSection<br><br># 定义了&quot;Intel&quot;设备，并将驱动程序设置为modesetting<br>Section &quot;Device&quot;<br>    Identifier &quot;intel&quot;<br>    Driver &quot;modesetting&quot;<br>    BusID  &quot;PCI:0:2:0&quot;<br>    Option &quot;AllowEmptyInitialConfiguration&quot; &quot;Yes&quot;<br>EndSection<br><br># 将&quot;Intel&quot;设备和标识符链接到一起<br>Section &quot;Screen&quot;<br>    Identifier &quot;intel&quot;<br>    Device &quot;intel&quot;<br>EndSection    <br><br>Section &quot;Files&quot;<br>EndSection<br></code></pre></td></tr></table></figure><p>其中BusID等信息可以通过命令获取, BusID就是开头的诸如 <code>1:0</code>,<code>0:2</code> 之类的</p><div class="tag-plugin copy"><input class="copy-area" id="copy_9" value="lspci -vnn | grep NVIDIA"><button class="copy-btn" onclick="util.copy(&quot;copy_9&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>同时这个配置能直接操作输出信息等, 修改不当易黑屏, 慎用!</p><h2 id="何算成功"><a href="#何算成功" class="headerlink" title="何算成功"></a>何算成功</h2><p>成功配置输出后会使用N卡, 打印N卡信息即可复查</p><ol><li><p>N卡信息 设置面板有读取信息常为成功。命令: <code>nvidia-settings</code><br><img src="https://upyun.thatcdn.cn/myself/typora/202306042319139.png"></p></li><li><p>GPU信息 GPU有使用率定为成功。命令: <code>nvidia-smi</code><br><img src="https://upyun.thatcdn.cn/myself/typora/202306042321245.png"></p></li></ol><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>这篇本打算当时写完, 但解决问题后愉快的使用系统去了, 昨天看了一眼UOS发送给Window的文件夹有上面两张图片才想起。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_zhoumei.png"/></span></p>]]></content>
    
    
    <summary type="html">解决基于Ubuntu系统的双显卡双显示屏的异常问题</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Linux" scheme="https://blog.thatcoder.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Flomo浮墨数据迁移至Memos</title>
    <link href="https://blog.thatcoder.cn/FlomoToMemos/"/>
    <id>https://blog.thatcoder.cn/FlomoToMemos/</id>
    <published>2023-05-11T11:23:00.000Z</published>
    <updated>2024-02-10T14:51:19.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><blockquote><p>以前喜欢捣腾笔记软件, 然在两年前遇到 <a href="https://flomoapp.com/">Flomo</a> (一款功能相当简约毫不起眼的APP)。<br>一年后我发现我使用它的频率是所有笔记APP里最高的! (最长是<code>Obsidian</code>)</p><p>然后被 <a href="https://cubox.pro/">Cubox</a> 取代, 诚然也有可能是 <code>Flomo</code> 过期我没续费。</p><p>今年初看到memos项目, 便萌生了继续使用<code>Flomo</code>(用<code>memos</code>代替)。因为 <code>Cubox</code> 更多的是琐碎时间浏览到需要的资料或者感兴趣的资料,<br>就转发到 <code>Cubox</code> 里面, 抽空再整理 <code>Cubox</code> 即可。<code>Cubox</code> 不太适合记录突发奇想、文摘、待办事项、感悟等内容。</p><p>这篇便是实现年初的想法, 把flomo全部数据转到memos! 开工!</p></blockquote><ul><li>2023.8.18修改适配Memos的0.14版本</li><li>2023.8.18修改支持创建时间一致</li><li>2024.2.10修改适配Memos的0.19版本<ul><li>但是这次不支持时间同步,设置的时间参数不被memos接收</li></ul></li></ul><h2 id="迁移思路"><a href="#迁移思路" class="headerlink" title="迁移思路"></a>迁移思路</h2><blockquote><p>实现挺简单的, 但在git没看到完整的轮子, 便自己完善</p></blockquote><ol><li>将flomo浮墨导出的数据转成json文件  (这步其实有一个轮子<a href="https://github.com/Alwayfeels/flomoParse">flomoParse</a><br>,但让使用的人不用折腾两个不同语言项目就一起写成了python代码)</li><li>读取json文件将内容和附件图片等通过API上传到自己的memos</li></ol><h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><p>实现在这里就不赘述, 代码比较明了。中途倒是遇到一个 python 实现 <code>multipart/form-data; boundary=&#123;boundary&#125;</code> 切片上传(<br>直接上传整个图片文件会限制大小)的小问题 有空记录一下。</p><figure class="highlight python"><figcaption><span>multipart切片</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">upFile</span>(<span class="hljs-params">filePath</span>):<br>    boundary = <span class="hljs-string">&#x27;----ThatCoder.cn&#x27;</span>  <span class="hljs-comment"># 切片标识符</span><br>    fileName = filePath.split(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flomo/&quot;</span> + filePath, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:  <span class="hljs-comment"># 读取二进制文件内容</span><br>        file_data = f.read()<br>    <span class="hljs-comment"># payload的encode()一个也不能删!!!</span><br>    payload = <span class="hljs-string">f&#x27;--<span class="hljs-subst">&#123;boundary&#125;</span>\r\nContent-Disposition: form-data; name=&quot;file&quot;;&#x27;</span>.encode()<br>    payload += <span class="hljs-string">f&#x27;filename=&quot;<span class="hljs-subst">&#123;fileName&#125;</span>&quot;\r\nContent-Type: <span class="hljs-subst">&#123;getType(fileName)&#125;</span>\r\n\r\n&#x27;</span>.encode()<br>    payload += file_data<br>    payload += <span class="hljs-string">f&#x27;\r\n--<span class="hljs-subst">&#123;boundary&#125;</span>--&#x27;</span>.encode()<br>    headers = Headers<br>    headers[<span class="hljs-string">&#x27;Content-Length&#x27;</span>] = <span class="hljs-built_in">str</span>(os.path.getsize(<span class="hljs-string">&quot;flomo/&quot;</span> + filePath))<br>    headers[<span class="hljs-string">&#x27;Content-Type&#x27;</span>] = <span class="hljs-string">f&#x27;multipart/form-data; boundary=<span class="hljs-subst">&#123;boundary&#125;</span>&#x27;</span><br>    response = requests.post(ApiBlob, headers=headers, data=payload)  <span class="hljs-comment"># files参数上传方案 requests_toolbelt包</span><br>    <span class="hljs-keyword">return</span> response.json()<br></code></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>项目README有图文讲解, 本篇用来防止提问的人(大概率没有)找不到地方。<br>项目地址: <a href="https://github.com/ThatCoders/FlomoToMemos">FlomoToMemos</a></p><p>PS: 注意对应memos版本的分支</p><h2 id="浮墨浅谈"><a href="#浮墨浅谈" class="headerlink" title="浮墨浅谈"></a>浮墨浅谈</h2><div class="tag-plugin swiper fancybox" id="swiper-api" effect="cards"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202305120118826.jpg" alt="少楠"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202305120118565.jpg" alt="Flomo共建群"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><br>昔者时光溢畅，余悠然自得，好炼煉微型软件。遇上浮墨，其简洁明了，且颜值甚高，遂投身其共修群聊。见开发者努力谋取，且妙趣横生，群友问题皆一一回复，群谈也和蔼可亲。证明喜欢一项产品，一部分为赏识开发团队之风采与行事方式。惟后来，再无后续之因缘。(GPT)]]></content>
    
    
    <summary type="html">将Flomo浮墨导出的数据内容和附件图片等通过API上传到memos</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Memos" scheme="https://blog.thatcoder.cn/tags/Memos/"/>
    
  </entry>
  
  <entry>
    <title>《星际拓荒》</title>
    <link href="https://blog.thatcoder.cn/game/Outer%20Wilds/"/>
    <id>https://blog.thatcoder.cn/game/Outer%20Wilds/</id>
    <published>2023-03-23T10:00:00.000Z</published>
    <updated>2023-12-30T20:26:32.179Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin quot"><h1 class="content" id="Little Nightmares" type="text"><a href="#Little Nightmares" class="headerlink" title="Little Nightmares"></a><span class="empty"></span><span class="text">Little Nightmares</span><span class="empty"></span></h1></div><div class="GameTags"><a class="tag-plugin colorful hashtag" color="green"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>7+</span></a>&nbsp;<a class="tag-plugin colorful hashtag" color="yellow"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>太空</span></a>&nbsp;<a class="tag-plugin colorful hashtag" color="yellow"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>解密</span></a></div><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306180122037.jpg" alt="游戏封面与音乐" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">游戏封面与音乐</span></div></div><iframe style="width: 100%" frameborder="no" border="0" marginwidth="0" marginheight="0" height=86 src="//music.163.com/outchain/player?type=2&id=1903408778&auto=1&height=66"></iframe><div class="tag-plugin quot"><h2 class="content" id="前言" type="icon"><a href="#前言" class="headerlink" title="前言"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">前言</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div>我知道这是一款很神奇的游戏, 但玩后我还是想说: 真TMD牛逼! 这才是第九艺术! <div class="tag-plugin quot"><h2 class="content" id="游戏发展史" type="icon"><a href="#游戏发展史" class="headerlink" title="游戏发展史"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">游戏发展史</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header">2012年</div><div class="body fs14"><div class="tag-plugin tabs"id="tab_20"><div class="nav-tabs"><div class="tab active"><a href="#tab_20-1">一个硕士的学生项目</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_20-1"><p>南加州大学Alex通过游戏展示海森堡提出的<a href="https://www.zhihu.com/topic/19612088/intro">不确定性原理</a></p></div></div></div></div></div><div class="timenode" index="1"><div class="header">2013年</div><div class="body fs14"><div class="tag-plugin tabs"id="tab_21"><div class="nav-tabs"><div class="tab active"><a href="#tab_21-1">初次会面</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_21-1"><p>在demo day冈政伟一见钟情星际拓荒demo, 但Alex去了微软</p></div></div></div></div></div><div class="timenode" index="2"><div class="header">2014年</div><div class="body fs14"><div class="tag-plugin tabs"id="tab_22"><div class="nav-tabs"><div class="tab active"><a href="#tab_22-1">Alex回归</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_22-1"><p>Alex加入Mobius</p></div></div></div></div></div><div class="timenode" index="3"><div class="header">2015年</div><div class="body fs14"><div class="tag-plugin tabs"id="tab_23"><div class="nav-tabs"><div class="tab active"><a href="#tab_23-1">公开Alpha版本</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_23-1"><p>获麦克纳利大奖, 3万刀, fig众筹</p></div></div></div></div></div><div class="timenode" index="4"><div class="header">2019年05月30日</div><div class="body fs14"><div class="tag-plugin tabs"id="tab_24"><div class="nav-tabs"><div class="tab active"><a href="#tab_24-1">游戏发行</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_24-1"><p>感谢马丁的美术</p></div></div></div></div></div></div><div class="tag-plugin quot"><h2 class="content" id="游戏介绍" type="icon"><a href="#游戏介绍" class="headerlink" title="游戏介绍"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">游戏介绍</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>任何剧情的介绍都是在浪费这款游戏, 如果您没有 晕3D、深海恐惧症, 并且有一颗探索宇宙的心。</p><p><strong>答案在最危险的太空中等着您。</strong></p><div class="tag-plugin quot"><h2 class="content" id="尾声" type="icon"><a href="#尾声" class="headerlink" title="尾声"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">尾声</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>拨开很多游戏光鲜亮丽的美术外衣, 本质是从这个地图位置到另一个地图位置击杀一个单位完成一个问号的过程, 亦或是纯数值游戏。</p><p>而《星际拓荒》让我回到了游戏最开始的纯粹, 没有数值没有升级没有装备没有金币没有地图问号。 甚至问NPC我该干嘛 他会回答:”<br>你是去月球还是碎空星，还是去木炉星的另一侧都无所谓。对我来说都一样。快去吧，好好玩儿!”, 我猜他还想补一句: “<br>别打扰老子烤棉花!”</p><p>很想分享游戏途中的一些惊奇, 但非常影响初玩者体验, 作罢!</p><p>如果你要游玩, 我想转告你: <strong>“这里充满了恐惧与孤独，但是一点浪漫即可将其全部驱散。”</strong></p><div class="tag-plugin quot"><h2 class="content" id="下载地址" type="icon"><a href="#下载地址" class="headerlink" title="下载地址"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">下载地址</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><div class="tag-plugin tabs" align="center"id="tab_25"><div class="nav-tabs"><div class="tab active"><a href="#tab_25-1">密码栏</a></div><div class="tab"><a href="#tab_25-2">下载栏</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_25-1"><p><mark class="tag-plugin colorful mark" color="warning">云盘密码</mark><div class="tag-plugin copy"><input class="copy-area" id="copy_16" value="dq0c"><button class="copy-btn" onclick="util.copy(&quot;copy_16&quot;,&quot;复制成功&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></p></div><div class="tab-pane" id="tab_25-2"><div class="tag-plugin link dis-select"><a class="link-card plain" title="星际拓荒" href="https://cloud.189.cn/web/share?code=VV3uAbNfUj2u" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">星际拓荒</span><span class="cap link footnote">https://cloud.189.cn/web/share?code=VV3uAbNfUj2u</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div></div></div></div><div class="tag-plugin quot"><p class="content" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">有能力一定入正喔!</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></p></div><div class="tag-plugin link dis-select"><a class="link-card plain" title="星际拓荒-steam正版" href="https://store.steampowered.com/app/753640/Outer_Wilds/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">星际拓荒-steam正版</span><span class="cap link footnote">https://store.steampowered.com/app/753640/Outer_Wilds/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag-plugin quot&quot;&gt;&lt;h1 class=&quot;content&quot; id=&quot;Little Nightmares&quot; type=&quot;text&quot;&gt;&lt;a href=&quot;#Little Nightmares&quot; class=&quot;headerlink&quot; title=&quot;L</summary>
      
    
    
    
    <category term="第九艺术" scheme="https://blog.thatcoder.cn/categories/%E7%AC%AC%E4%B9%9D%E8%89%BA%E6%9C%AF/"/>
    
    
    <category term="Game" scheme="https://blog.thatcoder.cn/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>您名下已备案网站目前涉及违法信息</title>
    <link href="https://blog.thatcoder.cn/%E6%82%A8%E5%90%8D%E4%B8%8B%E5%B7%B2%E5%A4%87%E6%A1%88%E7%BD%91%E7%AB%99%E7%9B%AE%E5%89%8D%E6%B6%89%E5%8F%8A%E8%BF%9D%E6%B3%95%E4%BF%A1%E6%81%AF/"/>
    <id>https://blog.thatcoder.cn/%E6%82%A8%E5%90%8D%E4%B8%8B%E5%B7%B2%E5%A4%87%E6%A1%88%E7%BD%91%E7%AB%99%E7%9B%AE%E5%89%8D%E6%B6%89%E5%8F%8A%E8%BF%9D%E6%B3%95%E4%BF%A1%E6%81%AF/</id>
    <published>2023-03-04T08:00:00.000Z</published>
    <updated>2023-09-18T15:28:14.959Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事的开始"><a href="#故事的开始" class="headerlink" title="故事的开始"></a>故事的开始</h2><ul><li>2号写单写的有点晚, 次日九点在睡梦中被电话惊醒, 一看是天翼就给他挂了继续睡 (已经忘记服务器就在天翼 <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_face_cry.png"/></span> )</li><li>3号下午收到一封邮件说这件事<br><img src="https://upyun.thatcdn.cn/myself/typora/202303041724446.png"></li><li>3号晚上发现这封邮件时我的服务器已经被封了端口 80 和 443 <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_annoyed.png"/></span></li></ul><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ol><li>按邮件查找相应内容并删除 <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_spit_blodd.png"/></span></li><li>删除完致电邮件里的联系方式并告诉客服原因与IP</li><li>等待客服审核对应内容与回电 (客服声音真好听 <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_doge.png"/></span> )</li></ol><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>懒得排查了, 那个服务器坐等过期.<br>可能是wordpress主题的原因, 有些链接被攻击成了成人网站, 导致我站包含链接网站.</p><p>总之碰到类似情况不要慌, 按邮件做即可.</p>]]></content>
    
    
    <summary type="html">有些链接被攻击成违法网站, 导致我站包含链接网站.</summary>
    
    
    
    <category term="生活" scheme="https://blog.thatcoder.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="随笔" scheme="https://blog.thatcoder.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>邮件样式模板集</title>
    <link href="https://blog.thatcoder.cn/%E9%82%AE%E7%AE%B1%E6%A8%A1%E6%9D%BF%E9%9B%86/"/>
    <id>https://blog.thatcoder.cn/%E9%82%AE%E7%AE%B1%E6%A8%A1%E6%9D%BF%E9%9B%86/</id>
    <published>2023-02-16T05:03:31.000Z</published>
    <updated>2023-09-19T17:14:55.009Z</updated>
    
    <content type="html"><![CDATA[<h2 id="薇尔莉特"><a href="#薇尔莉特" class="headerlink" title="薇尔莉特"></a>薇尔莉特</h2><blockquote><p><strong>动漫来源出自</strong>: <a href="https://www.bilibili.com/bangumi/media/md8892/"><strong>紫罗兰永恒花园</strong></a><br><strong>邮件模板作者</strong>: 旧版作者未知, 我是在<a href="https://akilar.top/posts/e2d3c450/">Akilar</a>看到的改版.</p></blockquote><figure class="highlight html"><figcaption><span>薇尔莉特</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;scrollbar&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css">::-webkit-scrollbar &#123;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span> <span class="hljs-meta">!important</span></span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    pre &#123;</span><br><span class="language-css">        <span class="hljs-attribute">white-space</span>: pre-wrap <span class="hljs-meta">!important</span>;</span><br><span class="language-css">        <span class="hljs-attribute">word-wrap</span>: break-word <span class="hljs-meta">!important</span>;</span><br><span class="language-css">        *<span class="hljs-attribute">white-space</span>: normal <span class="hljs-meta">!important</span></span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    pre &#123;</span><br><span class="language-css">        <span class="hljs-attribute">white-space</span>: pre-wrap <span class="hljs-meta">!important</span>;</span><br><span class="language-css">        <span class="hljs-attribute">word-wrap</span>: break-word <span class="hljs-meta">!important</span>;</span><br><span class="language-css">        *<span class="hljs-attribute">white-space</span>: normal <span class="hljs-meta">!important</span></span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-id">#letter</span> <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">max-width</span>: <span class="hljs-number">300px</span></span><br><span class="language-css">    &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;from-wrapstyle&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="hljs-selector-id">#form-wrap</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">447px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">        <span class="hljs-attribute">top</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">transition</span>: all <span class="hljs-number">1s</span> ease-in-out .<span class="hljs-number">3s</span>;</span><br><span class="language-css">        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">0</span></span><br><span class="language-css">    &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;from-wraphoverstyle&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="hljs-selector-id">#form-wrap</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">1300px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">top</span>: -<span class="hljs-number">200px</span></span><br><span class="language-css">    &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 530px;margin: 20px auto 0;height: 1000px;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;form-wrap&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://upyun.thatcdn.cn/public/web/email_template/head_before.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;before&quot;</span></span><br><span class="hljs-tag">                             <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute;bottom: 126px;left: 0px;background-repeat: no-repeat;width: 530px;height: 317px;z-index:-100&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;overflow: visible;height: 1500px;width: 500px;margin: 0px auto;transition: all 1s ease-in-out .3s;padding-top:200px;&quot;</span></span><br><span class="hljs-tag">        &lt;<span class="hljs-attr">form</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: white;width: 95%;max-width: 800px;margin: auto auto;border-radius: 5px;border: 1px solid;overflow: hidden;-webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12);box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;overflow: hidden;&quot;</span></span><br><span class="hljs-tag">                     <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://upyun.thatcdn.cn/public/web/email_template/head_wely.jpg&quot;</span>/&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding: 5px 20px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration: none; color: rgb(246, 214, 175);&quot;</span>&gt;</span>&#123;&#123; parent.nick &#125;&#125;，见信安：<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;letter&quot;</span></span><br><span class="hljs-tag">                         <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;overflow:auto;height:300px;width:100%;display:block;word-break: break-all;word-wrap: break-word;&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: inline-block;&quot;</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration: none;color: rgb(246, 214, 175)&quot;</span></span><br><span class="hljs-tag">                                                                 <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span></span><br><span class="hljs-tag">                                                                 <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span>&gt;</span>⟬&#123;&#123; site.name &#125;&#125;⟭<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上发表的评论:<br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;parentC&quot;</span></span><br><span class="hljs-tag">                             <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-bottom: #ddd 1px solid;border-left: #ddd 1px solid;padding-bottom: 20px;background-color: #eee;margin: 15px 0px;padding-left: 20px;padding-right: 20px;border-top: #ddd 1px solid;border-right: #ddd 1px solid;padding-top: 20px;font-family: &#x27;Arial&#x27;, &#x27;Microsoft YaHei&#x27; , &#x27;黑体&#x27; , &#x27;宋体&#x27; , sans-serif;&quot;</span>&gt;</span><br>                            &#123;&#123; parent.comment &#125;&#125;<br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>收到了来自&#123;&#123; self.nick &#125;&#125;的回复：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selfC&quot;</span></span><br><span class="hljs-tag">                             <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-bottom: #ddd 1px solid;border-left: #ddd 1px solid;padding-bottom: 20px;background-color: #eee;margin: 15px 0px;padding-left: 20px;padding-right: 20px;border-top: #ddd 1px solid;border-right: #ddd 1px solid;padding-top: 20px;font-family: &#x27;Arial&#x27;, &#x27;Microsoft YaHei&#x27; , &#x27;黑体&#x27; , &#x27;宋体&#x27; , sans-serif;&quot;</span>&gt;</span><br>                            &#123;&#123; self.comment &#125;&#125;<br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: center;margin-top: 40px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span></span><br><span class="hljs-tag">                            <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://upyun.thatcdn.cn/public/web/email_template/footer_bilibili.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;hr&quot;</span></span><br><span class="hljs-tag">                            <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%; margin:5px auto 5px auto; display: block;&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span></span><br><span class="hljs-tag">                            <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-transform: uppercase;text-decoration: none;font-size: 14px;border: 2px solid #6c7575;color: #2f3333;padding: 10px;display: inline-block;margin: 10px auto 0;background-color: rgb(246, 214, 175);&quot;</span></span><br><span class="hljs-tag">                            <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.postUrl&#125;&#125;&quot;</span>&gt;</span>&#123;&#123; parent.nick &#125;&#125;｜请您点击签收~<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 12px;text-align: center;color: #999;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>薇尔莉特·伊芙加登<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>自动书记人偶竭诚为您服务！<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>©2020-2023<span class="hljs-tag">&lt;<span class="hljs-name">a</span></span><br><span class="hljs-tag">                            <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none; color:rgb(246, 214, 175)&quot;</span></span><br><span class="hljs-tag">                            <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span>&gt;</span>&#123;&#123; site.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://upyun.thatcdn.cn/public/web/email_template/head_after.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;after&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;      position: absolute;bottom: -2px;left: 0;background-repeat: no-repeat;width: 530px;height: 259px;z-index:100&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="简洁渐变"><a href="#简洁渐变" class="headerlink" title="简洁渐变"></a>简洁渐变</h2><blockquote><p><strong>邮箱模板作者</strong>: 未知, 以前PHP站点扒的.</p></blockquote><figure class="highlight html"><figcaption><span>简洁渐变</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-radius: 10px 10px 10px 10px;font-size:14px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>&#123;&#123;site.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的留言有新评论啦！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123;self.nick&#125;&#125; 回复说：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>&#123;&#123;self.comment | safe&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none; color:#12addb&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.postUrl&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>`;<br>mailSubject: &#x27;&#123;&#123;parent.nick | safe&#125;&#125;，『&#123;&#123;site.name | safe&#125;&#125;』上的评论收到了回复&#x27;,<br>    mailTemplate: `<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-radius: 10px 10px 10px 10px;font-size:14px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>&#123;&#123;site.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的留言有新回复啦！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hi, &#123;&#123;parent.nick&#125;&#125;，您曾在文章上发表评论：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>&#123;&#123;self.comment | safe&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>&#123;&#123;self.nick&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> 给您的回复如下：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>&#123;&#123;self.comment | safe&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none; color:#12addb&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.postUrl&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>，欢迎再次光临<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none; color:#12addb&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>&#123;&#123;site.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:12px;color:#b7adad&quot;</span>&gt;</span>本邮件为系统自动发送，请勿直接回复邮件哦，可到博文内容回复。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;<span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span>&#123;<span class="hljs-attribute">text-decoration</span>:none&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="简洁头图"><a href="#简洁头图" class="headerlink" title="简洁头图"></a>简洁头图</h2><blockquote><p><strong>邮件模板作者</strong>: SaraKale根据上面改的.</p></blockquote><figure class="highlight html"><figcaption><span>简洁头图</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-image: url(https://npm.elemecdn.com/sarakale-assets@v1/Article/email/bg.jpg);;padding:20px 0px 20px;margin:0px;background-color:#ded8ca;width:100%;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: url(https://npm.elemecdn.com/sarakale-assets@v1/Article/email/leisi-714x62.png) repeat-y scroll top;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-radius: 10px 10px 10px 10px;font-size:14px;color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffe8dd61;box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);margin:auto&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;headerimg no-lightbox entered loaded&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://npm.elemecdn.com/sarakale-assets@v1/bg/bg3.jpg&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;overflow:hidden;pointer-events:none&quot;</span> <span class="hljs-attr">data-ll-status</span>=<span class="hljs-string">&quot;loaded&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;color:#9d2850;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;background: url(https://npm.elemecdn.com/sarakale-assets@v1/Article/email/line034_666x66.png) left top no-repeat;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:16px;font-weight: bold;text-align:center;word-break:break-all;padding: 23px 32px;margin:0;border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none;color: #9d2850;&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span><span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>&#123;&#123;site.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的文章有了新的评论<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin:40px auto;width:90%;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>&#123;&#123;self.nick&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> 回复说：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:15px;color:#555555;&quot;</span>&gt;</span>&#123;&#123;self.comment | safe&#125;&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none; color:#cf5c83&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.postUrl&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>查看回复的完整內容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>`,<br>  mailSubject: &#x27;&#123;&#123;parent.nick&#125;&#125;，您在『&#123;&#123;site.name&#125;&#125;』上发表的评论收到了来自 &#123;&#123;self.nick&#125;&#125; 的回复&#x27;,<br>  mailTemplate: `<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-image:url(https://npm.elemecdn.com/sarakale-assets@v1/Article/email/bg.jpg);;padding:20px 0px 20px;margin:0px;background-color:#ded8ca;width:100%;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background:url(https://npm.elemecdn.com/sarakale-assets@v1/Article/email/leisi-714x62.png) repeat-y scroll top;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-radius:10px 10px 10px 10px;font-size:14px;color:#555555;width:666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background:#ffe8dd61;box-shadow:0 1px 5px rgba(0,0,0,0.15);margin:auto&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;headerimg no-lightbox entered loaded&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://npm.elemecdn.com/sarakale-assets@v1/bg/bg3.jpg&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;overflow:hidden;pointer-events:none&quot;</span> <span class="hljs-attr">data-ll-status</span>=<span class="hljs-string">&quot;loaded&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;border-radius:10px 10px 0 0;background-image:-moz-linear-gradient(0deg,rgb(67,198,184),rgb(255,209,244));height:66px;background:url(https://npm.elemecdn.com/sarakale-assets@v1/Article/email/line034_666x66.png) left top no-repeat;color:#9d2850;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:16px;font-weight: bold;text-align:center;word-break:break-all;padding:23px 32px;margin:0;border-radius:10px 10px 0 0;&quot;</span>&gt;</span>您在<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none;color:#9d2850;&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span>&gt;</span>『&#123;&#123;site.name | safe&#125;&#125;』<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>上的留言有新回复啦！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin:40px auto;width:90%;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hi，&#123;&#123;parent.nick&#125;&#125;，您曾在文章上发表评论：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background:#fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow:0 2px 5px rgba(0,0,0,0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:15px;color:#555555;&quot;</span>&gt;</span>&#123;&#123;parent.comment | safe&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>&#123;&#123;self.nick&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> 给您的回复如下：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background:#fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow:0 2px 5px rgba(0,0,0,0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:15px;color:#555555;&quot;</span>&gt;</span>&#123;&#123;self.comment | safe&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以点击<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none;color:#cf5c83&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.postUrl&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span> 查看回复的完整內容 <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>，欢迎再次光临<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-decoration:none;color:#cf5c83&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123;site.url&#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span> &#123;&#123;site.name&#125;&#125; <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:14px;color:#b7adad&quot;</span>&gt;</span>本邮件为系统自动发送，请勿直接回复邮件哦，可到博文内容回复。<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span>https://sarakale.top/blog<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="组装时间线测试"><a href="#组装时间线测试" class="headerlink" title="组装时间线测试"></a>组装时间线测试</h2><h3 id="网易云memos微信读书联合测试"><a href="#网易云memos微信读书联合测试" class="headerlink" title="网易云memos微信读书联合测试"></a>网易云memos微信读书联合测试</h3><div class="tag-plugin timeline ds-custom" api="https://netease.thatapi.cn/user/event?uid=134968139&limit=10"></div><div class="tag-plugin timeline ds-custom" api="https://memos.thatcoder.cn/api/v1/memo/all?reatorId=1&limit=20"></div><div class="tag-plugin timeline ds-custom" api="https://blog.thatcoder.cn/custom/test/ThatRead.json"></div><h3 id="memos单个测试"><a href="#memos单个测试" class="headerlink" title="memos单个测试"></a>memos单个测试</h3><p>标识符不同应该不会混淆进去</p><div class="tag-plugin timeline ds-custom" api="https://memos.thatcoder.cn/api/v1/memo/all?reatorId=1&limit=20"></div>]]></content>
    
    
    <summary type="html">散落在互联网各个角落的邮箱邮件样式模板...</summary>
    
    
    
    <category term="分享" scheme="https://blog.thatcoder.cn/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="邮件" scheme="https://blog.thatcoder.cn/tags/%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>观《深海》的奇妙联想</title>
    <link href="https://blog.thatcoder.cn/daily/Deep%20Sea/"/>
    <id>https://blog.thatcoder.cn/daily/Deep%20Sea/</id>
    <published>2023-02-11T10:32:45.000Z</published>
    <updated>2023-09-18T15:28:01.497Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306180045677.png" data-fancybox="true"/></div></div><div class="tag-plugin quot"><h2 class="content" id="观前" type="icon"><a href="#观前" class="headerlink" title="观前"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">观前</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><ul><li>多位朋友安利</li><li>被影评博主吹爆</li><li>特效看着不赖</li><li>疫情管控放开后爷单纯想看电影</li></ul><div class="tag-plugin quot"><h2 class="content" id="观感" type="icon"><a href="#观感" class="headerlink" title="观感"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">观感</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>首先,<br>我有部分原因是奔着画面去的。<a href="https://baike.baidu.com/item/%E6%B7%B1%E6%B5%B7/18748673?fromModule=lemma_search-box">《深海》</a><br>也没令我失望, 呈现了一道国风视觉盛宴。颜狗党摊牌了。不过《深海》的特效也不是纯炫技, 极致的色彩对于参宿梦境的构建与情绪的表达都是锦上添花,<br>极具表现力。</p><p>至于呈现的剧情, 整体而言没有把握好因果, 或者说是导演的大胆想法导致必须舍弃良好的因果回归,<br>以至于将故事的真相与参宿的和解滞后到结尾。导演的放飞自我也会导致没对影片没共情的人带来更加不良好的观感。不过不得不说,<br>这滞后的后劲真大。</p><div class="tag-plugin quot"><h2 class="content" id="联想" type="icon"><a href="#联想" class="headerlink" title="联想"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">联想</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>其实剧情没什么内容, 倒是让我产生了一些联想。</p><p>开头参宿的情况我想起<a href="https://baike.baidu.com/item/%E6%88%91%E7%9A%84%E5%A7%90%E5%A7%90/52809740">《我的姐姐》</a>,<br>当然影片重点亦不是家庭情况。</p><p>整部剧情我想起游戏<a href="https://baike.baidu.com/item/%E5%8F%A4%E6%A0%91%E6%97%8B%E5%BE%8B/15890130?fromModule=lemma_search-box">《古树旋律DEEMO》</a><br>。海精灵和丧气鬼就像deemo里的神秘女孩,是自我意愿的具化, 不想让自己离开梦境; 影片中后暗示的光与声想起deemo右侧房间的病房心电图声;<br>一道白光拉回现实的雷同; 牺牲的南河与deemo…</p><p>还想起数句话:</p><ul><li>抑郁症患者自杀是想通了还是没想通。</li><li>抑郁症是病, 是缺神经质, 不是单纯的心理问题, 不是笑一笑就能解决的。</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202306180046230.png" alt="醒醒了，该散场了。" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">醒醒了，该散场了。</span></div></div><div class="tag-plugin quot"><h2 class="content" id="尾声" type="icon"><a href="#尾声" class="headerlink" title="尾声"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">尾声</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><p>总的我不安利这部电影, 正如网评一般: <u>影片最大的缝合，是将虚构的动画世界与现实的离异家庭子女问题、抑郁症等“丧文化”情绪进行对接，试图以超越性的情感共鸣唤起观众的价值共振，实现动画干预现实的诉求。然而，来源复杂、牵涉广泛的要素堆积，并没有为影片带来蒸汽朋克式的别样审美，反而因为过于强烈和刻意的表现欲，将上述要素降格为机械拼盘，未能产生应有的艺术效果。</u></p><p>当然无聊可以看看, 也许你是小众狂欢里的一员。</p><div class="tag-plugin quot"><h2 class="content" id="美图" type="icon"><a href="#美图" class="headerlink" title="美图"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">美图</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><div class="tag-plugin tabs"id="tab_26"><div class="nav-tabs"><div class="tab active"><a href="#tab_26-1">深海</a></div><div class="tab"><a href="#tab_26-2">古树旋律</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_26-1"><div class="tag-plugin swiper fancybox" id="swiper-api" effect="cards"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180037792.jpg"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180038159.jpg"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180038361.jpg"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180038644.jpg"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div></div><div class="tab-pane" id="tab_26-2"><div class="tag-plugin swiper fancybox" id="swiper-api" effect="cards"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180038083.jpg"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180038802.jpg"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180039414.jpg"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180039940.jpg"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180039407.png"></div><div class="swiper-slide"><img no-lazy src="https://upyun.thatcdn.cn/myself/typora/202306180039171.jpg"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div></div></div></div><p>咳咳, 其实也想分享古树旋律歌曲的, 大部分要VIP淦 <a href="https://music.163.com/#/playlist?id=2329729459">DEEMO歌单</a></p>]]></content>
    
    
    <summary type="html">由电影《深海》联想发散到游戏《古树旋律》</summary>
    
    
    
    <category term="生活" scheme="https://blog.thatcoder.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="影剧" scheme="https://blog.thatcoder.cn/tags/%E5%BD%B1%E5%89%A7/"/>
    
  </entry>
  
  <entry>
    <title>浅谈跨域-就你小子不让我跨域</title>
    <link href="https://blog.thatcoder.cn/CrossOrigin/"/>
    <id>https://blog.thatcoder.cn/CrossOrigin/</id>
    <published>2023-02-05T13:23:43.000Z</published>
    <updated>2023-12-30T20:17:08.311Z</updated>
    
    <content type="html"><![CDATA[<h2 id="何为跨域"><a href="#何为跨域" class="headerlink" title="何为跨域"></a>何为跨域</h2><p><strong>全称:</strong> “跨来源资源共享” “Cross-origin resource sharing”</p><p><strong>跨域范畴:</strong></p><ol><li>不同主域名</li><li>不同二级域名</li><li>不同端口</li><li>http和https协议不同</li><li>域名访问和直接访问其解析IP</li></ol><p><strong>造成影响:</strong></p><ol><li>Cookie、LocalStorage和IndexDB无法获取</li><li>DOM无法获得</li><li>AJAX请求不能发送</li><li>…</li></ol><h2 id="为何制定跨域"><a href="#为何制定跨域" class="headerlink" title="为何制定跨域"></a>为何制定跨域</h2><p>W3C的搞事佬制定的标准, 出发点当然是安全问题.<br>不妨思考一下古老钓鱼网站的行为, 与我的抽象代码.</p><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header">第一步</div><div class="body fs14"><p>通过个人通信方式把人骗到钓鱼网站</p></div></div><div class="timenode" index="1"><div class="header">第二步</div><div class="body fs14"><p>钓鱼网站已经嵌入了目标官方网站</p></div></div><div class="timenode" index="2"><div class="header">第三步</div><div class="body fs14"><p>(营销语气) 注意看, 这个男人叫王小帅, 他在钓鱼网站上输入了账号密码.</p></div></div><div class="timenode" index="3"><div class="header">第四步</div><div class="body fs14"><p>获取嵌入的官网的DOM节点获取账号密码.</p></div></div></div><figure class="highlight html"><figcaption><span>抽象钓鱼代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html">...<br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;diaoyu&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;www.xxbank.com&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> iframe = <span class="hljs-variable language_">window</span>.<span class="hljs-property">frames</span>[<span class="hljs-string">&#x27;diaoyu&#x27;</span>]</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> count = iframe.<span class="hljs-property">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;count&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> pwd = iframe.<span class="hljs-property">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;password&#x27;</span>)</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;账号:$&#123;count&#125;, 密码:$&#123;pwd&#125;&quot;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><blockquote><p>CORS需要浏览器和服务器同时支持。所有浏览器都支持该功能，IE浏览器不能低于IE10。<br>浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求。<br><strong>因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。</strong></p></blockquote><h3 id="了解请求与响应"><a href="#了解请求与响应" class="headerlink" title="了解请求与响应"></a>了解请求与响应</h3><ol><li>简单请求：<ol><li>请求method是get、head或者post</li><li>除了用户代理自动设置的一些头部，开发工程师手动设置的头部是如下头部之一： Accept, Accept-Language, Content-Language,<br>Content-Type, Last-Event-ID, DPR, Save-Data, Viewport-Width, Width</li><li>content-type是application&#x2F;x-www-form-urlencoded、 multipart&#x2F;form-data或者text&#x2F;plain</li><li>没有事件注册到XMLHttpRequestUpload上</li><li>在请求时没有使用ReadableStream</li></ol></li></ol><p>简单请求主要是解决<code>Access-Control-Allow-Origin</code>是否包含在通行域</p><figure class="highlight yaml"><figcaption><span>简单响应</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">//指定允许其他域名访问</span><br><span class="hljs-string">&#x27;Access-Control-Allow-Origin:http://172.20.0.206&#x27;</span><span class="hljs-string">//一般用法（*，指定域，动态设置），3是因为*不允许携带认证头和cookies</span><br><span class="hljs-string">//是否允许后续请求携带认证信息（cookies）,该值只能是true,否则不返回</span><br><span class="hljs-string">&#x27;Access-Control-Allow-Credentials:true&#x27;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>复杂请求：没错，不满足上面的，都是我啦！<br>浏览器会先发送option（预检）请求,<br>option请求多了2个字段 <code>Access-Control-Request-Method</code>, <code>Access-Control-Request-Headers</code></li></ol><figure class="highlight yaml"><figcaption><span>复杂响应</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">//指定允许其他域名访问</span><br><span class="hljs-string">&#x27;Access-Control-Allow-Origin:http://172.20.0.206&#x27;</span><span class="hljs-string">//一般用法（*，指定域，动态设置），3是因为*不允许携带认证头和cookies</span><br><span class="hljs-string">//是否允许后续请求携带认证信息（cookies）,该值只能是true,否则不返回</span><br><span class="hljs-string">&#x27;Access-Control-Allow-Credentials:true&#x27;</span><br><span class="hljs-string">//预检结果缓存时间,也就是上面说到的缓存啦</span><br><span class="hljs-string">&#x27;Access-Control-Max-Age: 1800&#x27;</span><br><span class="hljs-string">//允许的请求类型</span><br><span class="hljs-string">&#x27;Access-Control-Allow-Methods:GET,POST,PUT,POST&#x27;</span><br><span class="hljs-string">//允许的请求头字段</span><br><span class="hljs-string">&#x27;Access-Control-Allow-Headers:x-requested-with,content-type&#x27;</span><br></code></pre></td></tr></table></figure><div class="tag-plugin quot"><h2 class="content" id="前端" type="icon"><a href="#前端" class="headerlink" title="前端"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">前端</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><h3 id="祖传JSONP"><a href="#祖传JSONP" class="headerlink" title="祖传JSONP"></a>祖传JSONP</h3><p>同源策略是根据脚本(js)的来源判断是否限制, jsonp是通过 <code>&lt;script&gt;</code> 标签冒充同源.<br>缺点是只能发送<code>get</code>请求(聊胜于无?)</p><ul><li>原生JS<br>原生JS跨域问题示例代码</li></ul><figure class="highlight js"><figcaption><span>原生JS</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> script = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>);<br>  script.<span class="hljs-property">type</span> = <span class="hljs-string">&#x27;text/javascript&#x27;</span>;<br><br>  <span class="hljs-comment">// 传参一个回调函数名给后端，方便后端返回时执行这个在前端定义的回调函数</span><br>  script.<span class="hljs-property">src</span> = <span class="hljs-string">&#x27;http://www.domain2.com:8080/login?user=admin&amp;callback=handleCallback&#x27;</span>;<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">head</span>.<span class="hljs-title function_">appendChild</span>(script);<br><br>  <span class="hljs-comment">// 回调执行函数</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleCallback</span>(<span class="hljs-params">res</span>) &#123;<br>      <span class="hljs-title function_">alert</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(res));<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li>JQ<br>JQ跨域问题示例代码</li></ul><figure class="highlight js"><figcaption><span>Ajax</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">$.<span class="hljs-title function_">ajax</span>(&#123;<br>  <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://www.domain2.com:8080/login&#x27;</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;get&#x27;</span>,<br>  <span class="hljs-attr">dataType</span>: <span class="hljs-string">&#x27;jsonp&#x27;</span>,  <span class="hljs-comment">// 请求方式为jsonp</span><br>  <span class="hljs-attr">jsonpCallback</span>: <span class="hljs-string">&quot;handleCallback&quot;</span>,  <span class="hljs-comment">// 自定义回调函数名</span><br>  <span class="hljs-attr">data</span>: &#123;&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>Vue<br>Vue Axios跨域问题示例代码</li></ul><figure class="highlight js"><figcaption><span>Axios</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-property">$http</span> = axios;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$http</span>.<span class="hljs-title function_">jsonp</span>(<span class="hljs-string">&#x27;http://www.domain2.com:8080/login&#x27;</span>, &#123;<br>  <span class="hljs-attr">params</span>: &#123;&#125;,<br>  <span class="hljs-attr">jsonp</span>: <span class="hljs-string">&#x27;handleCallback&#x27;</span><br>  &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br>&#125;)<br></code></pre></td></tr></table></figure><ul><li>Node.js<br>NodeJS跨域问题示例代码</li></ul><figure class="highlight js"><figcaption><span>Node</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> querystring = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;querystring&#x27;</span>);<br><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">var</span> server = http.<span class="hljs-title function_">createServer</span>();<br>server.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) &#123;<br>  <span class="hljs-keyword">var</span> params = querystring.<span class="hljs-title function_">parse</span>(req.<span class="hljs-property">url</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;?&#x27;</span>)[<span class="hljs-number">1</span>]);<br>  <span class="hljs-keyword">var</span> fn = params.<span class="hljs-property">callback</span>;<br>  <span class="hljs-comment">// jsonp返回设置</span><br>  res.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>, &#123; <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;text/javascript&#x27;</span> &#125;);<br>  res.<span class="hljs-title function_">write</span>(fn + <span class="hljs-string">&#x27;(&#x27;</span> + <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(params) + <span class="hljs-string">&#x27;)&#x27;</span>);<br>  res.<span class="hljs-title function_">end</span>();<br>&#125;);<br>server.<span class="hljs-title function_">listen</span>(<span class="hljs-string">&#x27;8080&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Server is running at port 8080...&#x27;</span>);<br></code></pre></td></tr></table></figure><h3 id="前端配置"><a href="#前端配置" class="headerlink" title="前端配置"></a>前端配置</h3><ul><li>原生Ajax<br>原生Ajax跨域问题示例代码</li></ul><figure class="highlight js"><figcaption><span>Ajax</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>(); <span class="hljs-comment">// IE8/9需用window.XDomainRequest兼容</span><br><br><span class="hljs-comment">// 前端设置是否带cookie</span><br>xhr.<span class="hljs-property">withCredentials</span> = <span class="hljs-literal">true</span>;<br><br>xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;post&#x27;</span>, <span class="hljs-string">&#x27;http://www.domain2.com:8080/login&#x27;</span>, <span class="hljs-literal">true</span>);<br>xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br>xhr.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;user=admin&#x27;</span>);<br><br>xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> == <span class="hljs-number">4</span> &amp;&amp; xhr.<span class="hljs-property">status</span> == <span class="hljs-number">200</span>) &#123;<br>        <span class="hljs-title function_">alert</span>(xhr.<span class="hljs-property">responseText</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>jQ Ajax<br>JQ Ajax跨域问题配置示例代码</li></ul><figure class="highlight js"><figcaption><span>JQAjax</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">$.<span class="hljs-title function_">ajax</span>(&#123;<br>...<br><span class="hljs-attr">xhrFields</span>: &#123;<br>    <span class="hljs-attr">withCredentials</span>: <span class="hljs-literal">true</span>    <span class="hljs-comment">// 前端设置是否带cookie</span><br>&#125;,<br><span class="hljs-attr">crossDomain</span>: <span class="hljs-literal">true</span>,   <span class="hljs-comment">// 会让请求头中包含跨域的额外信息，但不会含cookie</span><br>...<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>Vue配置<br>Vue跨域跨域问题axios,vue-resource配置示例代码<ul><li>axios设置：<br><code>axios.defaults.withCredentials = true</code></li><li>vue-resource设置：<br><code>Vue.http.options.credentials = true</code></li></ul></li></ul><div class="tag-plugin quot"><h2 class="content" id="后端" type="icon"><a href="#后端" class="headerlink" title="后端"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">后端</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><ul><li>方案一: <strong>WebCrosConfig</strong><br>java跨域问题addCorsMappings方案示例代码</li></ul><figure class="highlight java"><figcaption><span>配置类</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebCrosConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addCorsMappings</span><span class="hljs-params">(CorsRegistry registry)</span> &#123;<br>        registry.addMapping(<span class="hljs-string">&quot;/**&quot;</span>)<br>                .allowedOriginPatterns(<span class="hljs-string">&quot;*&quot;</span>)<br>                .allowedMethods(<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-string">&quot;HEAD&quot;</span>,<span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-string">&quot;PUT&quot;</span>,<span class="hljs-string">&quot;DELETE&quot;</span>,<span class="hljs-string">&quot;OPTIONS&quot;</span>)<br>                .allowCredentials(<span class="hljs-literal">true</span>)<br>                .maxAge(<span class="hljs-number">3600</span>)<br>                .allowedHeaders(<span class="hljs-string">&quot;*&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>方案二: <strong>CrosFilter</strong><br>java跨域问题CrosFilter方案示例代码<br>友人南山客补充方案</li></ul><figure class="highlight java"><figcaption><span>CrosFilter</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @author 南山客 友情赞助代码</span><br><span class="hljs-comment"> * @email nansker@163.com</span><br><span class="hljs-comment"> * @create 2022/10/10 17:31</span><br><span class="hljs-comment"> * @description</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">package</span> cn.nansk.takeout.config;<br><br><span class="hljs-keyword">import</span> cn.nansk.takeout.common.JacksonObjectMapper;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.http.converter.HttpMessageConverter;<br><span class="hljs-keyword">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;<br><span class="hljs-keyword">import</span> org.springframework.web.cors.CorsConfiguration;<br><span class="hljs-keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;<br><span class="hljs-keyword">import</span> org.springframework.web.filter.CorsFilter;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addResourceHandlers</span><span class="hljs-params">(ResourceHandlerRegistry registry)</span> &#123;<br>        log.info(<span class="hljs-string">&quot;开始进行静态资源映射...&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// <span class="hljs-doctag">FIXME:</span> 2022/11/2 跨域问题没有得到解决</span><br>    <span class="hljs-comment">//解决跨域问题</span><br>    <span class="hljs-comment">//@Override</span><br>    <span class="hljs-comment">//public void addCorsMappings(CorsRegistry registry)&#123;</span><br>    <span class="hljs-comment">//    registry.addMapping(&quot;/**&quot;)</span><br>    <span class="hljs-comment">//            .allowedOriginPatterns(&quot;*&quot;)</span><br>    <span class="hljs-comment">//            .allowedMethods(&quot;GET&quot;,&quot;HEAD&quot;,&quot;POST&quot;,&quot;PUT&quot;,&quot;DELETE&quot;,&quot;OPTIONS&quot;)</span><br>    <span class="hljs-comment">//            .allowCredentials(true)</span><br>    <span class="hljs-comment">//            .maxAge(3600)</span><br>    <span class="hljs-comment">//            .allowedHeaders(&quot;*&quot;);</span><br>    <span class="hljs-comment">//&#125;</span><br><br>    <span class="hljs-comment">/***</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@author</span> Nansker</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@date</span> 2023/2/17 23:17</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> org.springframework.web.filter.CorsFilter</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@description</span> 允许跨域调用过滤器</span><br><span class="hljs-comment">     * 这里不能使用Override addCorsMappings()方法解决跨域问题，具体原因未知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> CorsFilter <span class="hljs-title function_">corsFilter</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">CorsConfiguration</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CorsConfiguration</span>();<br>        <span class="hljs-comment">//允许白名单域名进行跨域调用</span><br>        config.addAllowedOrigin(<span class="hljs-string">&quot;*&quot;</span>);<br>        <span class="hljs-comment">//允许跨越发送cookie</span><br>        config.setAllowCredentials(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">//放行全部原始头信息</span><br>        config.addAllowedHeader(<span class="hljs-string">&quot;*&quot;</span>);<br>        <span class="hljs-comment">//允许所有请求方法跨域调用</span><br>        config.addAllowedMethod(<span class="hljs-string">&quot;*&quot;</span>);<br>        <span class="hljs-type">UrlBasedCorsConfigurationSource</span> <span class="hljs-variable">source</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UrlBasedCorsConfigurationSource</span>();<br>        source.registerCorsConfiguration(<span class="hljs-string">&quot;/**&quot;</span>, config);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CorsFilter</span>(source);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><figure class="highlight js"><figcaption><span>配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">var</span> server = http.<span class="hljs-title function_">createServer</span>();<br><span class="hljs-keyword">var</span> qs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;querystring&#x27;</span>);<br><br>server.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) &#123;<br>    <span class="hljs-keyword">var</span> postData = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-comment">// 数据块接收中</span><br>    req.<span class="hljs-title function_">addListener</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">chunk</span>) &#123;<br>        postData += chunk;<br>    &#125;);<br>    <span class="hljs-comment">// 数据接收完毕</span><br>    req.<span class="hljs-title function_">addListener</span>(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        postData = qs.<span class="hljs-title function_">parse</span>(postData);<br><br>        <span class="hljs-comment">// 跨域后台设置</span><br>        res.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>, &#123;<br>            <span class="hljs-string">&#x27;Access-Control-Allow-Credentials&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,     <span class="hljs-comment">// 后端允许发送Cookie</span><br>            <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="hljs-string">&#x27;http://www.domain1.com&#x27;</span>,    <span class="hljs-comment">// 允许访问的域（协议+域名+端口）</span><br>            <span class="hljs-comment">/* </span><br><span class="hljs-comment">             * 此处设置的cookie还是domain2的而非domain1，因为后端也不能跨域写cookie(nginx反向代&#123;过&#125;&#123;滤&#125;理可以实现)，</span><br><span class="hljs-comment">             * 但只要domain2中写入一次cookie认证，后面的跨域接口都能从domain2中获取cookie，从而实现所有的接口都能跨域访问</span><br><span class="hljs-comment">             */</span><br>            <span class="hljs-string">&#x27;Set-Cookie&#x27;</span>: <span class="hljs-string">&#x27;l=a123456;Path=/;Domain=www.domain2.com;HttpOnly&#x27;</span>  <span class="hljs-comment">// HttpOnly的作用是让js无法读取cookie</span><br>        &#125;);<br><br>        res.<span class="hljs-title function_">write</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(postData));<br>        res.<span class="hljs-title function_">end</span>();<br>    &#125;);<br>&#125;);<br>server.<span class="hljs-title function_">listen</span>(<span class="hljs-string">&#x27;8080&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Server is running at port 8080...&#x27;</span>);<br></code></pre></td></tr></table></figure><div class="tag-plugin quot"><h2 class="content" id="服务器" type="icon"><a href="#服务器" class="headerlink" title="服务器"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" /><span class="text">服务器</span><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></h2></div><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>通过Nginx配置一个代理服务器域名与domain1相同，端口不同）做跳板机，反向代理访问domain2接口，并且可以顺便修改cookie中domain信息，方便当前域cookie写入，实现跨域访问。</p><figure class="highlight yaml"><figcaption><span>站点配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#proxy服务器</span><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span>       <span class="hljs-number">81</span><span class="hljs-string">;</span><br>    <span class="hljs-string">server_name</span>  <span class="hljs-string">www.domain1.com;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>        <span class="hljs-string">proxy_pass</span>   <span class="hljs-string">http://www.domain2.com:8080;</span>  <span class="hljs-comment">#反向代理</span><br>        <span class="hljs-string">proxy_cookie_domain</span> <span class="hljs-string">www.domain2.com</span> <span class="hljs-string">www.domain1.com;</span> <span class="hljs-comment">#修改cookie里域名</span><br>        <span class="hljs-string">index</span>  <span class="hljs-string">index.html</span> <span class="hljs-string">index.htm;</span><br><br>        <span class="hljs-comment"># 当用webpack-dev-server等中间件代理接口访问nignx时，此时无浏览器参与，故没有同源限制，下面的跨域配置可不启用</span><br>        <span class="hljs-string">add_header</span> <span class="hljs-string">Access-Control-Allow-Origin</span> <span class="hljs-string">http://www.domain1.com;</span>  <span class="hljs-comment">#当前端只跨域不带cookie时，可为*</span><br>        <span class="hljs-string">add_header</span> <span class="hljs-string">Access-Control-Allow-Credentials</span> <span class="hljs-literal">true</span><span class="hljs-string">;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Node-1"><a href="#Node-1" class="headerlink" title="Node"></a>Node</h3><p>node中间件实现跨域代理，原理大致与nginx相同，都是通过启一个代理服务器，实现数据的转发，也可以通过设置cookieDomainRewrite参数修改响应头中cookie中域名，实现当前域的cookie写入，方便接口登录认证。</p><h2 id="fetch跨域"><a href="#fetch跨域" class="headerlink" title="fetch跨域"></a>fetch跨域</h2><h3 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h3><h4 id="FG前端代码"><a href="#FG前端代码" class="headerlink" title="FG前端代码"></a>FG前端代码</h4><figure class="highlight js"><figcaption><span>前端get</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;http://localhost:6888/test_get&#x27;</span>,&#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">json</span>();<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">json</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;获取的结果&#x27;</span>, json.<span class="hljs-property">data</span>);<br>    <span class="hljs-keyword">return</span> json;<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;请求错误&#x27;</span>, err);<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><figure class="highlight yaml"><figcaption><span>服务端配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">c.Header(&quot;Access-Control-Allow-Origin&quot;,</span> <span class="hljs-string">&quot;*&quot;</span><span class="hljs-string">)</span><br><span class="hljs-string">c.Header(&quot;Access-Control-Allow-Methods&quot;,</span> <span class="hljs-string">&quot;GET, POST&quot;</span><span class="hljs-string">)</span><br></code></pre></td></tr></table></figure><h3 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h3><h4 id="FP前端代码"><a href="#FP前端代码" class="headerlink" title="FP前端代码"></a>FP前端代码</h4><figure class="highlight js"><figcaption><span>前端post</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;http://localhost:6888/test_post&#x27;</span>,&#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-attr">body</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;zaozuo&#x27;</span>&#125;),<br>    <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">json</span>();<br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">json</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;获取的结果&#x27;</span>, json.<span class="hljs-property">data</span>);<br>    <span class="hljs-keyword">return</span> json;<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;请求错误&#x27;</span>, err);<br>&#125;)<br></code></pre></td></tr></table></figure><p>后端代码同get相同</p><h3 id="put请求"><a href="#put请求" class="headerlink" title="put请求"></a>put请求</h3><p>把post请求模式改成put即可, 其它一致.<br>不同于get、post请求的地方是请求有个预检查（OPTIONS请求），然后再发put请求；上面的头部信息都是options请求相关的，put请求跟平时普通http请求一样。</p><h3 id="头部补充"><a href="#头部补充" class="headerlink" title="头部补充"></a>头部补充</h3><ul><li>request跨域头部介绍<ul><li>Access-Control-Allow-Origin：可以允许哪些客户端来访问，指可以是*，也可以是某个域名或者用逗号隔开的域名列表。</li><li>Access-Control-Expose-Headers： 浏览器可以访问的一些头部。</li><li>Access-Control-Max-Age：预检查结果可以缓存的问题</li><li>Access-Control-Allow-Methods：指定客户端发请求可以使用的方法</li><li>Access-Control-Allow-Headers：指定客户端发请求可以使用的头部。</li><li>Access-Control-Allow-Credentials: 指定客户端是否可以携带cookie等认证信息(<br>前端fetch设置withCredentials：true进行发送cookie),如果是简单请求等跨域得确保此response头设置为true。</li></ul></li><li>response头部<ul><li>Access-Control-Allow-Origin：可以允许哪些客户端来访问，指可以是*，也可以是某个域名或者用逗号隔开的域名列表。</li><li>Access-Control-Expose-Headers： 浏览器可以访问的一些头部。</li><li>Access-Control-Max-Age：预检查结果可以缓存的问题</li><li>Access-Control-Allow-Methods：指定客户端发请求可以使用的方法</li><li>Access-Control-Allow-Headers：指定客户端发请求可以使用的头部。</li><li>Access-Control-Allow-Credentials: 指定客户端是否可以携带cookie等认证信息(<br>前端fetch设置withCredentials：true进行发送cookie),如果是简单请求等跨域得确保此response头设置为true。</li></ul></li></ul><h2 id="奇技淫巧方案"><a href="#奇技淫巧方案" class="headerlink" title="奇技淫巧方案"></a>奇技淫巧方案</h2><h3 id="同主域不同子域"><a href="#同主域不同子域" class="headerlink" title="同主域不同子域"></a>同主域不同子域</h3><p>实现原理：两个页面都通过js强制设置document.domain为基础主域，就实现了同域。</p><ul><li>父窗口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;iframe id=&quot;iframe&quot; src=&quot;http://child.domain.com/b.html&quot;&gt;&lt;/iframe&gt;<br>&lt;script&gt;<br>    document.domain = &#x27;domain.com&#x27;;<br>    var user = &#x27;admin&#x27;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li>子窗口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;script&gt;<br>    document.domain = &#x27;domain.com&#x27;;<br>    // 获取父窗口中变量<br>    alert(&#x27;get js data from parent ---&gt; &#x27; + window.parent.user);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="不同主域"><a href="#不同主域" class="headerlink" title="不同主域"></a>不同主域</h3><h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h4><p>实现原理：a欲与b跨域相互通信，通过中间页c来实现。三个页面，不同域之间利用iframe的location.hash传值，相同域之间直接js访问来通信。<br>具体实现：A域：a.html -&gt; B域：b.html -&gt; A域：c.html，a与b不同域只能通过hash值单向通信，b与c也不同域也只能单向通信，但c与a同域，所以c可通过parent.parent访问a页面所有对象。</p><figure class="highlight html"><figcaption><span>a.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;iframe&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://www.domain2.com/b.html&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> iframe = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;iframe&#x27;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 向b.html传hash值</span></span><br><span class="language-javascript">    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        iframe.<span class="hljs-property">src</span> = iframe.<span class="hljs-property">src</span> + <span class="hljs-string">&#x27;#user=admin&#x27;</span>;</span><br><span class="language-javascript">    &#125;, <span class="hljs-number">1000</span>);</span><br><span class="language-javascript">    </span><br><span class="language-javascript">    <span class="hljs-comment">// 开放给同域c.html的回调方法</span></span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">onCallback</span>(<span class="hljs-params">res</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;data from c.html ---&gt; &#x27;</span> + res);</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>b.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;iframe&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://www.domain1.com/c.html&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> iframe = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;iframe&#x27;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 监听a.html传来的hash值，再传给c.html</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">window</span>.<span class="hljs-property">onhashchange</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        iframe.<span class="hljs-property">src</span> = iframe.<span class="hljs-property">src</span> + location.<span class="hljs-property">hash</span>;</span><br><span class="language-javascript">    &#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>c.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 监听b.html传来的hash值</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">window</span>.<span class="hljs-property">onhashchange</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 再通过操作同域a.html的js回调，将结果传回</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">window</span>.<span class="hljs-property">parent</span>.<span class="hljs-property">parent</span>.<span class="hljs-title function_">onCallback</span>(<span class="hljs-string">&#x27;hello: &#x27;</span> + location.<span class="hljs-property">hash</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;#user=&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>));</span><br><span class="language-javascript">    &#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h4><p>window.name属性的独特之处：name值在不同页面（甚至不同域名）加载后依旧存在，并且可以支持非常长的name值（2MB）.<br>代理b.html的数据通过iframe的src属性由外域转向本地域，跨域数据即由iframe的window.name从外域传递到本地域。这个就巧妙地绕过了浏览器的跨域访问限制，但同时它又是安全操作。</p><ul><li>doamin1&#x2F;a.html</li><li>doamin1&#x2F;proxy.html</li><li>domain2&#x2F;b.html</li></ul><figure class="highlight html"><figcaption><span>a.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html">var proxy = function(url, callback) &#123;<br>    var state = 0;<br>    var iframe = document.createElement(&#x27;iframe&#x27;);<br><br>    // 加载跨域页面<br>    iframe.src = url;<br><br>    // onload事件会触发2次，第1次加载跨域页，并留存数据于window.name<br>    iframe.onload = function() &#123;<br>        if (state === 1) &#123;<br>            // 第2次onload(同域proxy页)成功后，读取同域window.name中数据<br>            callback(iframe.contentWindow.name);<br>            destoryFrame();<br><br>        &#125; else if (state === 0) &#123;<br>            // 第1次onload(跨域页)成功后，切换到同域代&#123;过&#125;&#123;滤&#125;理页面<br>            iframe.contentWindow.location = &#x27;http://www.domain1.com/proxy.html&#x27;;<br>            state = 1;<br>        &#125;<br>    &#125;;<br><br>    document.body.appendChild(iframe);<br><br>    // 获取数据以后销毁这个iframe，释放内存；这也保证了安全（不被其他域frame js访问）<br>    function destoryFrame() &#123;<br>        iframe.contentWindow.document.write(&#x27;&#x27;);<br>        iframe.contentWindow.close();<br>        document.body.removeChild(iframe);<br>    &#125;<br>&#125;;<br><br>// 请求跨域b页面数据<br>proxy(&#x27;http://www.domain2.com/b.html&#x27;, function(data)&#123;<br>    alert(data);<br>&#125;); <br></code></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>proxy.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">中间代理页，与a.html同域，内容为空即可。<br></code></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>b.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-variable language_">window</span>.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;This is domain2 data!&#x27;</span>;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="postMessage"><a href="#postMessage" class="headerlink" title="postMessage"></a>postMessage</h3><p>postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：</p><ol><li>页面和其打开的新窗口的数据传递</li><li>多窗口之间消息传递</li><li>页面与嵌套的 iframe 消息传递</li><li>上面三个场景的跨域数据传递</li></ol><p>用法：postMessage(data,origin)方法接受两个参数：</p><ul><li>data：html5规范支持任意基本类型或可复制的对象，但部分浏览器只支持字符串，所以传参时最好用JSON.stringify()序列化。</li><li>origin：协议+主机+端口号，也可以设置为”*“，表示可以传递给任意窗口，如果要指定和当前窗口同源的话设置为”&#x2F;“。</li></ul><figure class="highlight html"><figcaption><span>a.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;iframe&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://www.domain2.com/b.html&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">       </span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> iframe = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;iframe&#x27;</span>);</span><br><span class="language-javascript">    iframe.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> data = &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;aym&#x27;</span></span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">        <span class="hljs-comment">// 向domain2传送跨域数据</span></span><br><span class="language-javascript">        iframe.<span class="hljs-property">contentWindow</span>.<span class="hljs-title function_">postMessage</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data), <span class="hljs-string">&#x27;http://www.domain2.com&#x27;</span>);</span><br><span class="language-javascript">    &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 接受domain2返回数据</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;data from domain2 ---&gt; &#x27;</span> + e.<span class="hljs-property">data</span>);</span><br><span class="language-javascript">    &#125;, <span class="hljs-literal">false</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>b.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 接收domain1的数据</span></span><br><span class="language-javascript">    <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;data from domain1 ---&gt; &#x27;</span> + e.<span class="hljs-property">data</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> data = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(e.<span class="hljs-property">data</span>);</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (data) &#123;</span><br><span class="language-javascript">            data.<span class="hljs-property">number</span> = <span class="hljs-number">16</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 处理后再发回domain1</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">window</span>.<span class="hljs-property">parent</span>.<span class="hljs-title function_">postMessage</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data), <span class="hljs-string">&#x27;http://www.domain1.com&#x27;</span>);</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;, <span class="hljs-literal">false</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h3><p>WebSocket protocol是HTML5一种新的协议。它实现了浏览器与服务器全双工通信，同时允许跨域通讯，是server push技术的一种很好的实现。<br>原生WebSocket API使用起来不太方便，我们使用Socket.io，它很好地封装了webSocket接口，提供了更简单、灵活的接口，也对不支持webSocket的浏览器提供了向下兼容。</p><figure class="highlight html"><figcaption><span>前端代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>user input：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./socket.io.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> socket = <span class="hljs-title function_">io</span>(<span class="hljs-string">&#x27;http://www.domain2.com:8080&#x27;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">// 连接成功处理</span></span><br><span class="language-javascript">socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;connect&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-comment">// 监听服务端消息</span></span><br><span class="language-javascript">    socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">msg</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;data from server: ---&gt; &#x27;</span> + msg); </span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 监听服务端关闭</span></span><br><span class="language-javascript">    socket.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;disconnect&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123; </span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Server socket has closed.&#x27;</span>); </span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&#x27;input&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">onblur</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    socket.<span class="hljs-title function_">send</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>);</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>Node-socket后台</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">var</span> socket = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>);<br><br><span class="hljs-comment">// 启http服务</span><br><span class="hljs-keyword">var</span> server = http.<span class="hljs-title function_">createServer</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) &#123;<br>    res.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>, &#123;<br>        <span class="hljs-string">&#x27;Content-type&#x27;</span>: <span class="hljs-string">&#x27;text/html&#x27;</span><br>    &#125;);<br>    res.<span class="hljs-title function_">end</span>();<br>&#125;);<br><br>server.<span class="hljs-title function_">listen</span>(<span class="hljs-string">&#x27;8080&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Server is running at port 8080...&#x27;</span>);<br><br><span class="hljs-comment">// 监听socket连接</span><br>socket.<span class="hljs-title function_">listen</span>(server).<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;connection&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">client</span>) &#123;<br>    <span class="hljs-comment">// 接收信息</span><br>    client.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">msg</span>) &#123;<br>        client.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;hello：&#x27;</span> + msg);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;data from client: ---&gt; &#x27;</span> + msg);<br>    &#125;);<br><br>    <span class="hljs-comment">// 断开处理</span><br>    client.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;disconnect&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Client socket has closed.&#x27;</span>); <br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">针对跨域问题浅谈, 以及前后端与服务端解决方案.</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="跨域" scheme="https://blog.thatcoder.cn/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>Waline评论与Lsky兰空图床</title>
    <link href="https://blog.thatcoder.cn/Waline%E4%B8%8ELsky%E5%85%B0%E7%A9%BA%E5%9B%BE%E5%BA%8A/"/>
    <id>https://blog.thatcoder.cn/Waline%E4%B8%8ELsky%E5%85%B0%E7%A9%BA%E5%9B%BE%E5%BA%8A/</id>
    <published>2023-02-04T20:29:25.000Z</published>
    <updated>2023-12-30T20:26:32.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>giscus改为waline后不能上传图片, 配置好后还是会弹图片大于128KB, 可能我哪里搞错了吧.<br>查阅waline源码有一个<a href="https://github.com/walinejs/waline/blob/main/packages/client/src/config/default.ts#L20-L30">defaultUpdateImage</a><br>限制图片文件大小128KB, 但自定义后还是会走到这里判断.<br>遂自己改造了一下, 并记录一路碰到的许多问题.</p><blockquote><p>2023.02.06 破案了, 感谢<a href="https://www.shifeiti.com/">是非题</a>提醒主题后续将主题参数 url 改成 api,<br>详见<a href="https://github.com/xaoxuu/hexo-theme-stellar/commit/5f733646cc05b9f30088e3586707c4ae36e39b62">2023.1.12的commit</a>.<br>好细节!<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_lovely.png"/></span><br>这个故事告诉我们要及时拉取.<br>所以我把Stellar的提交历史放到了<a href="/notes/%E5%85%B3%E6%B3%A8/Stellar%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95.html">便签关注</a> </p><span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://upyun.thatcdn.cn/public/web/emojis/bilibili/bb_doge.png"/></span></blockquote><h2 id="获取兰空Token"><a href="#获取兰空Token" class="headerlink" title="获取兰空Token"></a>获取兰空Token</h2><h3 id="搭建LskyPro"><a href="#搭建LskyPro" class="headerlink" title="搭建LskyPro"></a>搭建LskyPro</h3><div class="tag-plugin link dis-select"><a class="link-card plain" title="兰空搭建" href="/Lsky兰空图床搭建/" cardlink autofill="icon"><div class="left"><span class="title">兰空搭建</span><span class="cap link footnote">https://blog.thatcoder.cn/Lsky%E5%85%B0%E7%A9%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><h3 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h3><p>一个Post请求就可以获取Token, 但前端的一切都是公开的, 意味着你的Token一定暴露.<br>所以建一个专门用来当博客评论图床的账号, 给少点鉴权限.</p><figure class="highlight markdown"><figcaption><span>Post请求</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">https://你的部署地址/api/v1/tokens<br></code></pre></td></tr></table></figure><p>你可以使用<a href="https://v7.apipost.cn/apis#/apis/run">ApiPost网页版</a></p><details class="tag-plugin colorful folding" ><summary><span>ApiPost网页版请求方法</span></summary><div class="body"><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202302052035850.png" alt="成功响应" data-fancybox="true"/></div><div class="image-meta"><span class="image-caption center">成功响应</span></div></div>填装body参数 `email` `password`</div></details><p>请求成功得到一个类似 <code>3|xxxxxxxxxxxxxxxxxxxxxx</code> 的响应参数, 前面的竖杠和数字不要漏了.</p><h2 id="搭建waline"><a href="#搭建waline" class="headerlink" title="搭建waline"></a>搭建waline</h2><p>这个不用服务器, vercel一步到位, 详情参考官方教程.</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="waline之vercel部署" href="https://waline.js.org/guide/get-started/#vercel-%E9%83%A8%E7%BD%B2-%E6%9C%8D%E5%8A%A1%E7%AB%AF" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">waline之vercel部署</span><span class="cap link footnote">https://waline.js.org/guide/get-started/#vercel-%E9%83%A8%E7%BD%B2-%E6%9C%8D%E5%8A%A1%E7%AB%AF</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="hexo启用waline"><a href="#hexo启用waline" class="headerlink" title="hexo启用waline"></a>hexo启用waline</h2><p>不同主题不一样, 如果主题没适配waline可以自己在生成文章的地方适当位置添加一个div给上唯一id, 等下会用到.<br>这里给Stellar主题评论启用waline</p><figure class="highlight yaml"><figcaption><span>根目录/_config.stellar.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 评论 twikoo服务</span><br><span class="hljs-attr">comments:</span><br>  <span class="hljs-attr">service:</span> <span class="hljs-string">waline</span><br>  <span class="hljs-attr">waline:</span><br>    <span class="hljs-attr">serverURL:</span> <span class="hljs-string">https://你部署的地址/</span> <span class="hljs-comment"># waline 地址</span><br>    <span class="hljs-attr">locale:</span><br>      <span class="hljs-attr">placeholder:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># 输入框内提示文字</span><br>    <span class="hljs-comment"># Custom emoji</span><br>    <span class="hljs-attr">emoji:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">https://unpkg.com/@waline/emojis@1.1.0/bilibili</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">https://unpkg.com/@waline/emojis@1.1.0/qq</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">https://fastly.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs</span><br>    <span class="hljs-attr">imageUploader:</span> <br>      <span class="hljs-comment"># 适配了兰空图床V1、V2版本</span><br>      <span class="hljs-comment"># 以兰空图床V1为例，下列填写内容为：</span><br>      <span class="hljs-attr">fileName:</span> <span class="hljs-string">file</span><br>      <span class="hljs-attr">tokenName:</span> <span class="hljs-string">Authorization</span><br>      <span class="hljs-attr">api:</span> <span class="hljs-string">https://你的兰空地址/api/v1/upload</span><br>      <span class="hljs-attr">token:</span> <span class="hljs-string">Bearer</span> <span class="hljs-number">1</span><span class="hljs-string">|xxxxxxx你的token</span><br>      <span class="hljs-attr">resp:</span> <span class="hljs-string">data.links.url</span><br></code></pre></td></tr></table></figure><p>Stellar主题用户配置完要是可以上传文件就不用往下看了.</p><h2 id="自定义js"><a href="#自定义js" class="headerlink" title="自定义js"></a>自定义js</h2><p><strong>路径:</strong> themes&#x2F;stellar&#x2F;layout&#x2F;_partial&#x2F;plugins&#x2F;comments&#x2F;waline&#x2F;script.ejs<br>我的这个文件肯定是加载了, 但到上传图片时会限制128KB, 按理用了imageUploader就不应该还是走的数据库存储base64策略, 唉<br>自己动手吧.<br>以下代码参考waline官网和xaoxuu, 所以不同主题也适用(不同的是看你代码放哪里, 要是主题不是js模板引擎即ejs结尾,<br>就改成js代码)</p><figure class="highlight js"><figcaption><span>路径在上面</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script type=<span class="hljs-string">&quot;module&quot;</span>&gt;<br><span class="hljs-keyword">import</span> &#123; init &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;/custom/package/waline/dist/waline.mjs&#x27;</span>;  <span class="hljs-comment">//md 我这里用CDN还是会提示大于128KB, 所以直接引入了</span><br><span class="hljs-keyword">const</span> el = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;waline_container&quot;</span>);   <span class="hljs-comment">//这里是你的评论div#id</span><br><span class="hljs-keyword">var</span> idPath = el.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;comment_id&#x27;</span>);<br><span class="hljs-keyword">if</span> (!idPath) &#123;<br>  idPath = <span class="hljs-built_in">decodeURI</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span>);   <span class="hljs-comment">// 给评论div加上唯一标识, 不如评论乱串文章.</span><br>&#125;<br><span class="hljs-keyword">const</span> waline = <span class="hljs-title function_">init</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#waline_container&#x27;</span>,    <span class="hljs-comment">//这里是你的评论div#id</span><br>  <span class="hljs-attr">search</span>: <span class="hljs-literal">false</span>,  <span class="hljs-comment">//关闭表情查找 不大好用</span><br>  <span class="hljs-comment">// 设置 emoji 为微博与哔哩哔哩</span><br>  <span class="hljs-attr">emoji</span>: [<br>    <span class="hljs-string">&#x27;https://unpkg.com/@waline/emojis@1.1.0/bilibili&#x27;</span>,<br>    <span class="hljs-string">&#x27;https://unpkg.com/@waline/emojis@1.1.0/qq&#x27;</span>,<br>    <span class="hljs-string">&#x27;https://fastly.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs&#x27;</span><br>  ],<br>  <span class="hljs-attr">reaction</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 开启反应</span><br>  <span class="hljs-attr">comment</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 评论数统计</span><br>  <span class="hljs-comment">// pageview: true, // 浏览量统计</span><br>  <span class="hljs-attr">serverURL</span>: <span class="hljs-string">&#x27;https://你的waline地址&#x27;</span>,    <span class="hljs-comment">// 记得改自己的waline地址</span><br>  <span class="hljs-attr">path</span>: idPath,<br>  <span class="hljs-attr">imageUploader</span>: <span class="hljs-function">(<span class="hljs-params">file</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> formData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FormData</span>();<br>    <span class="hljs-keyword">let</span> headers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Headers</span>();<br>    formData.<span class="hljs-title function_">append</span>(<span class="hljs-string">&#x27;file&#x27;</span>, file);<br>    headers.<span class="hljs-title function_">append</span>(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>    headers.<span class="hljs-title function_">append</span>(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>    headers.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;Authorization&#x27;</span>, <span class="hljs-string">&#x27;Bearer 1|xxxxxxx你的兰空tokens&#x27;</span>);   <span class="hljs-comment">// 记得改自己的token</span><br>    headers.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;Accept&#x27;</span>, <span class="hljs-string">&#x27;application/json&#x27;</span>);<br>    <span class="hljs-comment">// headers.set(&quot;Content-Type&quot;,&quot;multipart/form-data&quot;);</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;https://你的兰空地址/api/v1/upload&#x27;</span>, &#123;    <span class="hljs-comment">// 记得改自己的兰空</span><br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-attr">headers</span>: headers,<br>      <span class="hljs-attr">body</span>: formData,<br>      <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>    &#125;)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">resp</span>) =&gt;</span> resp.<span class="hljs-title function_">json</span>())<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">resp</span>) =&gt;</span> resp.<span class="hljs-property">data</span>.<span class="hljs-property">links</span>.<span class="hljs-property">url</span>);<br>  &#125;,<br>&#125;);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此结束了, 要是也碰到奇葩的fetch跨域问题, 不妨试试下面的文章.</p>]]></content>
    
    
    <summary type="html">主题的图片上传在我这有点毛病, 改造过程中兰空API的跨域问题也随之而来, 很淦...</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Stellar" scheme="https://blog.thatcoder.cn/tags/Stellar/"/>
    
  </entry>
  
  <entry>
    <title>Lsky兰空图床搭建</title>
    <link href="https://blog.thatcoder.cn/Lsky%E5%85%B0%E7%A9%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/"/>
    <id>https://blog.thatcoder.cn/Lsky%E5%85%B0%E7%A9%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</id>
    <published>2023-02-04T11:31:53.000Z</published>
    <updated>2023-09-19T17:14:55.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>感谢兰空图床开源作者 <a href="https://www.wispx.cn/article/lsky-pro-past-life-and-present-life.html">Wisp X</a><br>及其它<a href="https://github.com/lsky-org/lsky-pro/graphs/contributors">贡献者</a></p></blockquote><p><strong>环境需求</strong></p><ul><li>一台服务器</li><li>PHP 8.0.2+ 及系列拓展(万恶的PHP!)</li><li>Mysql 5.7+</li></ul><h2 id="最新版下载"><a href="#最新版下载" class="headerlink" title="最新版下载"></a>最新版下载</h2><div class="tag-plugin timeline ds-timeline" api="https://api.github.xaox.cc/repos/lsky-org/lsky-pro/releases?per_page=1"></div><h2 id="建站环节"><a href="#建站环节" class="headerlink" title="建站环节"></a>建站环节</h2><h3 id="新建站点"><a href="#新建站点" class="headerlink" title="新建站点"></a>新建站点</h3><p>有了Vercel好久没自己建站了 ,久违的感觉.<br>直接新建一个PHP8的站点即可, 域名记得解析.</p><h3 id="站点设置"><a href="#站点设置" class="headerlink" title="站点设置"></a>站点设置</h3><ol><li><p>把下载好的压缩包解压到站点根目录.</p></li><li><p>站点目录所有者改为 <code>www</code>，权限改为 <code>0755</code></p></li><li><p>网站运行目录选择为 <code>public</code>, 宝塔用户如下图</p><details class="tag-plugin colorful folding" ><summary><span>宝塔用户不知道哪里修改看这里</span></summary><div class="body"><p><img src="https://upyun.thatcdn.cn/myself/typora/202302050557312.png" alt="宝塔用户"></p></div></details></li><li><p>伪静态策略<br>我给的伪静态代码和官网不太一样, 我用官网的不能跨域, 响应会出现两个<code>Access-Control-Allow-Origin</code>, 所以只能自己改写一个伪静态规则.<br>如果你的跨域有问题就试试我的.</p><div class="tag-plugin tabs"id="tab_1"><div class="nav-tabs"><div class="tab active"><a href="#tab_1-1">官网</a></div><div class="tab"><a href="#tab_1-2">钟意</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_1-1"><figure class="highlight yaml"><figcaption><span>伪静态</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">location</span> <span class="hljs-string">/</span> <br>&#123;<br>  <span class="hljs-string">try_files</span> <span class="hljs-string">$uri</span> <span class="hljs-string">$uri/</span> <span class="hljs-string">/index.php?$query_string;</span><br>&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-pane" id="tab_1-2"><figure class="highlight yaml"><figcaption><span>伪静态</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">location</span> <span class="hljs-string">/</span><br>&#123;<br>  <span class="hljs-string">try_files</span> <span class="hljs-string">$uri</span> <span class="hljs-string">$uri/</span> <span class="hljs-string">/index.php?s=$1;</span><br>  <span class="hljs-string">add_header</span> <span class="hljs-string">Access-Control-Allow-Origin</span> <span class="hljs-string">&quot;*&quot;</span><span class="hljs-string">;</span><br>&#125;<br></code></pre></td></tr></table></figure></div></div></div></li></ol><h3 id="建数据库"><a href="#建数据库" class="headerlink" title="建数据库"></a>建数据库</h3><p>新建一个数据库叫什么名字都行, 其实配置默认即可.</p><h2 id="安装Lsky"><a href="#安装Lsky" class="headerlink" title="安装Lsky"></a>安装Lsky</h2><p>浏览你的网站会自动进入<code>域名/install</code>.<br>一路检查下来应该问题出在PHP拓展和禁用函数, 根据提示去安装拓展和开放函数.</p><details class="tag-plugin colorful folding" ><summary><span>宝塔用户开放函数</span></summary><div class="body"><div class="tag-plugin image"><div class="image-bg"><img src="https://upyun.thatcdn.cn/myself/typora/202302050613193.png" data-fancybox="true"/></div></div>软件商店->已安装->php8->设置</div></details><p>安装完成后根据自己需求配置用户组存储策略等.</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>储存策略记得加一个服务并设置为默认, 然后删除本地储存(服务器哪扛得住)</p>]]></content>
    
    
    <summary type="html">你可以将它作为自己的云上相册，亦可以当作你的写作贴图库。</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="图床" scheme="https://blog.thatcoder.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>Stellar代码块个人向美化</title>
    <link href="https://blog.thatcoder.cn/Stellar%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%AA%E4%BA%BA%E5%90%91%E7%BE%8E%E5%8C%96/"/>
    <id>https://blog.thatcoder.cn/Stellar%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%AA%E4%BA%BA%E5%90%91%E7%BE%8E%E5%8C%96/</id>
    <published>2023-02-03T08:42:02.000Z</published>
    <updated>2023-12-30T20:17:08.302Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>增加主题控制后代码块样式有些唐突, 遂改之.</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>不改变主题代码情况下思路的主旋律按以下走:</p><ol><li>代码块随主题颜色变更</li><li>增加复制代码功能 (来源<a href="https://www.whbbit.cn/">whbbit</a>)</li><li>增加代码过长折叠</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>下面直接成品, 有需求自定义修改</p><h3 id="代码块样式"><a href="#代码块样式" class="headerlink" title="代码块样式"></a>代码块样式</h3><figure class="highlight css"><figcaption><span>ZYCode.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-pseudo">:root</span>&#123;<br>    <span class="hljs-attr">--code-autor</span>: <span class="hljs-string">&#x27;© 钟意博客🌙&#x27;</span>;<br>    <span class="hljs-attr">--code-tip</span>: <span class="hljs-string">&quot;优雅借鉴&quot;</span>;<br>&#125; <br><br> <span class="hljs-comment">/*语法高亮*/</span><br> <span class="hljs-selector-class">.hljs</span> &#123;<br>     <span class="hljs-attribute">position</span>: relative;<br>     <span class="hljs-attribute">display</span>: block;<br>     <span class="hljs-attribute">overflow-x</span>: hidden;<br>     <span class="hljs-comment">/*背景跟随Stellar*/</span><br>     <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--block);<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#9c67a1</span>;<br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">30px</span> <span class="hljs-number">5px</span> <span class="hljs-number">2px</span> <span class="hljs-number">5px</span>;<br>     <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">30px</span> <span class="hljs-number">0px</span> <span class="hljs-built_in">rgb</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> / <span class="hljs-number">40%</span>)<br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-built_in">var</span>(--code-tip);<br>     <span class="hljs-attribute">position</span>: absolute;<br>     <span class="hljs-attribute">left</span>: <span class="hljs-number">15px</span>;<br>     <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>     <span class="hljs-attribute">overflow</span>: visible;<br>     <span class="hljs-attribute">width</span>: <span class="hljs-number">12px</span>;<br>     <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>     <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">16px</span>;<br>     <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#a9a6a1</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#999</span>;<br>     -webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#999</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#999</span>;<br>     <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#999</span>;<br>     <span class="hljs-attribute">white-space</span>: nowrap;<br>     <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">75px</span>;<br>     <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>     <span class="hljs-attribute">line-height</span>: <span class="hljs-number">12px</span>;<br>     <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span><br> &#125;<br><br> <span class="hljs-selector-class">.highlight</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#35cd4b</span>;<br>     <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#fdbc40</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#35cd4b</span>;<br>     -webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#fdbc40</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#35cd4b</span>;<br>     <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fc625d</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-ln</span> &#123;<br>     <span class="hljs-attribute">display</span>: inline-block;<br>     <span class="hljs-attribute">overflow-x</span>: auto;<br>     <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">5px</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-ln</span> <span class="hljs-selector-tag">td</span> &#123;<br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>     <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--block)<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-ln</span>::-webkit-scrollbar &#123;<br>     <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>     <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>     <span class="hljs-attribute">background</span>: <span class="hljs-number">#333</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-ln</span>::-webkit-scrollbar-thumb &#123;<br>     <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#bbb</span>;<br>     <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-ln</span>::-webkit-scrollbar-thumb:hover &#123;<br>     <span class="hljs-attribute">background</span>: <span class="hljs-number">#ddd</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span> <span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">tbody</span> <span class="hljs-selector-tag">tr</span> &#123;<br>     <span class="hljs-attribute">border</span>: none<br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span> <span class="hljs-selector-class">.hljs-ln-line</span> &#123;<br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">1px</span> <span class="hljs-number">10px</span>;<br>     <span class="hljs-attribute">border</span>: none<br> &#125;<br><br> <span class="hljs-selector-tag">td</span><span class="hljs-selector-class">.hljs-ln-line</span><span class="hljs-selector-class">.hljs-ln-numbers</span> &#123;<br>     <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#666</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-keyword</span>,<br> <span class="hljs-selector-class">.hljs-literal</span>,<br> <span class="hljs-selector-class">.hljs-symbol</span>,<br> <span class="hljs-selector-class">.hljs-name</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#c78300</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-link</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#569cd6</span>;<br>     <span class="hljs-attribute">text-decoration</span>: underline<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-built_in</span>,<br> <span class="hljs-selector-class">.hljs-type</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#4ec9b0</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-number</span>,<br> <span class="hljs-selector-class">.hljs-class</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#2094f3</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-string</span>,<br> <span class="hljs-selector-class">.hljs-meta-string</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#4caf50</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-regexp</span>,<br> <span class="hljs-selector-class">.hljs-template-tag</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#9a5334</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-subst</span>,<br> <span class="hljs-selector-class">.hljs-function</span>,<br> <span class="hljs-selector-class">.hljs-title</span>,<br> <span class="hljs-selector-class">.hljs-params</span>,<br> <span class="hljs-selector-class">.hljs-formula</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#c78300</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-property</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#9c67a1</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-comment</span>,<br> <span class="hljs-selector-class">.hljs-quote</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#57a64a</span>;<br>     <span class="hljs-attribute">font-style</span>: italic<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-doctag</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#608b4e</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-meta</span>,<br> <span class="hljs-selector-class">.hljs-meta-keyword</span>,<br> <span class="hljs-selector-class">.hljs-tag</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#9b9b9b</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-variable</span>,<br> <span class="hljs-selector-class">.hljs-template-variable</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#bd63c5</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-attr</span>,<br> <span class="hljs-selector-class">.hljs-attribute</span>,<br> <span class="hljs-selector-class">.hljs-builtin-name</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#d34141</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-section</span> &#123;<br>     <span class="hljs-attribute">color</span>: gold<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-emphasis</span> &#123;<br>     <span class="hljs-attribute">font-style</span>: italic<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-strong</span> &#123;<br>     <span class="hljs-attribute">font-weight</span>: bold<br> &#125;<br><br> <span class="hljs-selector-class">.hljs-bullet</span>,<br> <span class="hljs-selector-class">.hljs-selector-tag</span>,<br> <span class="hljs-selector-class">.hljs-selector-id</span>,<br> <span class="hljs-selector-class">.hljs-selector-class</span>,<br> <span class="hljs-selector-class">.hljs-selector-attr</span>,<br> <span class="hljs-selector-class">.hljs-selector-pseudo</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#c78300</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-addition</span> &#123;<br>     <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#144212</span>;<br>     <span class="hljs-attribute">display</span>: inline-block;<br>     <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs-deletion</span> &#123;<br>     <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#600</span>;<br>     <span class="hljs-attribute">display</span>: inline-block;<br>     <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-html</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-xml</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;HTML/XML&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-javascript</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;JavaScript&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-c</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;C&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-cpp</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;C++&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-java</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Java&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-asp</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ASP&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-actionscript</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ActionScript/Flash/Flex&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-bash</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Bash&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-css</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;CSS&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-asp</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;ASP&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-cs</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-csharp</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;C#&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-d</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;D&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-golang</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-go</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Go&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-json</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;JSON&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-lua</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Lua&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-less</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;LESS&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-md</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-markdown</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-mkdown</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-mkd</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Markdown&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-mm</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-objc</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-obj-c</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-objective-c</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Objective-C&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-php</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;PHP&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-perl</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-pl</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-pm</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Perl&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-python</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-py</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-gyp</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-ipython</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Python&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-r</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;R&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-ruby</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-rb</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-gemspec</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-podspec</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-thor</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-irb</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Ruby&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-sql</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;SQL&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-sh</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-shell</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-Session</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-shellsession</span><span class="hljs-selector-pseudo">::before</span>,<br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-console</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Shell&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-swift</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Swift&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-vb</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;VB/VBScript&quot;</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljs</span><span class="hljs-selector-class">.language-yaml</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;YAML&quot;</span><br> &#125;<br><br> <span class="hljs-comment">/*stellar主题补偿*/</span><br> <span class="hljs-selector-class">.md-text</span> pre&gt;<span class="hljs-selector-class">.hljs</span> &#123;<br>     <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">2rem</span> <span class="hljs-meta">!important</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.md-text</span> pre &#123;<br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-meta">!important</span>;<br> &#125;<br><br> <span class="hljs-selector-tag">code</span> &#123;<br>     <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">90deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">60</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>, .<span class="hljs-number">04</span>) <span class="hljs-number">3%</span>, transparent <span class="hljs-number">0</span>), <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">1turn</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">60</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>, .<span class="hljs-number">04</span>) <span class="hljs-number">3%</span>, transparent <span class="hljs-number">0</span>) <span class="hljs-meta">!important</span>;<br>     <span class="hljs-attribute">background-size</span>: <span class="hljs-number">20px</span> <span class="hljs-number">20px</span> <span class="hljs-meta">!important</span>;<br>     <span class="hljs-attribute">background-position</span>: <span class="hljs-number">50%</span> <span class="hljs-meta">!important</span>;<br> &#125;<br><br> <span class="hljs-selector-tag">figure</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>     <span class="hljs-attribute">content</span>: <span class="hljs-built_in">var</span>(--code-autor);<br>     <span class="hljs-attribute">text-align</span>: right;<br>     <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;<br>     <span class="hljs-attribute">float</span>: right;<br>     <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">3px</span>;<br>     <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">15px</span>;<br>     <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">8px</span>;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span><br> &#125;<br><br> <span class="hljs-selector-tag">figcaption</span> <span class="hljs-selector-tag">span</span> &#123;<br>     <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0px</span> <span class="hljs-number">0px</span> <span class="hljs-number">12px</span> <span class="hljs-number">12px</span> <span class="hljs-meta">!important</span>;<br> &#125;<br><br><br> <span class="hljs-comment">/* 复制代码按钮 */</span><br> <span class="hljs-selector-class">.highlight</span> &#123;<br>     <span class="hljs-attribute">position</span>: relative;<br> &#125;<br><br> <span class="hljs-selector-class">.highlight</span> <span class="hljs-selector-class">.code</span> <span class="hljs-selector-class">.copy-btn</span> &#123;<br>     <span class="hljs-attribute">position</span>: absolute;<br>     <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>     <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">4px</span> <span class="hljs-number">0.5rem</span>;<br>     <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.25</span>;<br>     <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--theme);<br>     <span class="hljs-attribute">cursor</span>: pointer;<br>     transination: opacity <span class="hljs-number">0.3s</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.highlight</span> <span class="hljs-selector-class">.code</span> <span class="hljs-selector-class">.copy-btn</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--text-code);<br>     <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.75</span>;<br> &#125;<br><br> <span class="hljs-selector-class">.highlight</span> <span class="hljs-selector-class">.code</span> <span class="hljs-selector-class">.copy-btn</span><span class="hljs-selector-class">.success</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--swiper-theme-color);<br>     <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.75</span>;<br> &#125;<br><br> <span class="hljs-comment">/* 描述 */</span><br> <span class="hljs-selector-class">.md-text</span> <span class="hljs-selector-class">.highlight</span> <span class="hljs-selector-tag">figcaption</span> <span class="hljs-selector-tag">span</span> &#123;<br>     <span class="hljs-attribute">font-size</span>: small;<br> &#125;<br><br> <span class="hljs-comment">/* 折叠 */</span><br> <span class="hljs-selector-tag">code</span><span class="hljs-selector-class">.hljs</span> &#123;<br>     <span class="hljs-attribute">display</span>: -webkit-box;<br>     <span class="hljs-attribute">overflow</span>: hidden;<br>     <span class="hljs-attribute">text-overflow</span>: ellipsis;<br>     -webkit-box-orient: vertical;<br>     <span class="hljs-comment">/*-webkit-line-clamp: 6;*/</span><br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">0</span> <span class="hljs-number">1rem</span>; <span class="hljs-comment">/* chino建议 */</span><br> &#125;<br><br> <span class="hljs-selector-class">.hljsOpen</span> &#123;<br>     -webkit-line-clamp: <span class="hljs-number">99999</span> <span class="hljs-meta">!important</span>;<br> &#125;<br> <span class="hljs-selector-class">.CodeCloseDiv</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--block);<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">justify-content</span>: center;<br>    <span class="hljs-attribute">margin-top</span>: inherit;<br>    <span class="hljs-attribute">margin-bottom</span>: -<span class="hljs-number">18px</span>;<br> &#125;<br> <span class="hljs-selector-class">.CodeClose</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>     <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">3px</span>;<br>     <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--block);<br> &#125;<br><br> <span class="hljs-selector-class">.highlight</span> <span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:hover</span>,<br> <span class="hljs-selector-class">.highlight</span> <span class="hljs-selector-tag">table</span><span class="hljs-selector-pseudo">:hover</span>+<span class="hljs-selector-tag">button</span> &#123;<br>     <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--swiper-theme-color);<br>     <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.75</span>;<br> &#125;<br></code></pre></td></tr></table></figure><h3 id="执行函数"><a href="#执行函数" class="headerlink" title="执行函数"></a>执行函数</h3><blockquote><p>原作者<a href="https://www.whbbit.cn/2023/01/31/stellar%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/">复制代码</a><br>会因为tabs这种标签的display:none而与代码语言重合, 已修复(也不算修复, 我把它写死了)</p></blockquote><figure class="highlight js"><figcaption><span>ZYCode.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 这四个常量是复制,复制成功,展开,收缩</span><br><span class="hljs-comment">// 我使用的是 https://fontawesome.com/ 图标, 不用可以改为文字.</span><br><span class="hljs-keyword">const</span> copyText = <span class="hljs-string">&#x27;&lt;i class=&quot;fa-regular fa-copy&quot;  style=&quot;color: #aa69ec;&quot;&gt;&lt;/i&gt;&#x27;</span>;<br><span class="hljs-keyword">const</span> copySuccess = <span class="hljs-string">&#x27;&lt;i class=&quot;fa-regular fa-circle-check&quot;  style=&quot;color: limegreen;&quot;&gt;&lt;/i&gt;&#x27;</span>;<br><span class="hljs-keyword">const</span> openText = <span class="hljs-string">&#x27;&lt;i class=&quot;fa-solid fa-angles-down  fa-beat-fade&quot;&gt;&lt;/i&gt;&#x27;</span>;<br><span class="hljs-keyword">const</span> closeText = <span class="hljs-string">&#x27;&lt;i class=&quot;fa-solid fa-angles-up  fa-beat-fade&quot;&gt;&lt;/i&gt;&#x27;</span>;<br><br><span class="hljs-keyword">const</span> codeElements = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;td.code&#x27;</span>);<br><br>codeElements.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">code, index</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> preCode = code.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;pre&#x27;</span>);<br><br>    <span class="hljs-comment">// 设置id和样式</span><br>    preCode.<span class="hljs-property">id</span> = <span class="hljs-string">`ZYCode<span class="hljs-subst">$&#123;index+<span class="hljs-number">1</span>&#125;</span>`</span>;<br>    preCode.<span class="hljs-property">style</span>.<span class="hljs-property">webkitLineClamp</span> = <span class="hljs-string">&#x27;6&#x27;</span>;<br><br>    <span class="hljs-comment">// 添加展开/收起按钮</span><br>    <span class="hljs-keyword">if</span> (preCode.<span class="hljs-property">innerHTML</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>).<span class="hljs-property">length</span> &gt; <span class="hljs-number">6</span>) &#123;<br>        <span class="hljs-keyword">const</span> codeCopyDiv = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>);<br>        codeCopyDiv.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;CodeCloseDiv&#x27;</span>);<br>        code.<span class="hljs-property">parentNode</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">appendChild</span>(codeCopyDiv);<br><br>        <span class="hljs-keyword">const</span> codeCopyOver = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;button&#x27;</span>);<br>        codeCopyOver.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;CodeClose&#x27;</span>);<br>        codeCopyOver.<span class="hljs-property">innerHTML</span> = openText;<br><br>        <span class="hljs-keyword">const</span> parent = code.<span class="hljs-property">parentNode</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-property">parentNode</span>;<br>        <span class="hljs-keyword">const</span> description = parent.<span class="hljs-property">childNodes</span>.<span class="hljs-property">length</span> === <span class="hljs-number">3</span> ? parent.<span class="hljs-property">children</span>[<span class="hljs-number">2</span>] : parent.<span class="hljs-property">children</span>[<span class="hljs-number">1</span>];<br>        description.<span class="hljs-title function_">appendChild</span>(codeCopyOver);<br><br>        codeCopyOver.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (codeCopyOver.<span class="hljs-property">innerHTML</span> === openText) &#123;<br>                <span class="hljs-keyword">const</span> scrollTop = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span>;<br>                <span class="hljs-keyword">const</span> codeHeight = code.<span class="hljs-property">clientHeight</span>;<br><br>                <span class="hljs-keyword">if</span> (scrollTop &lt; codeHeight) &#123;<br>                    <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span> += codeHeight - scrollTop;<br>                &#125;<br><br>                preCode.<span class="hljs-property">style</span>.<span class="hljs-property">webkitLineClamp</span> = <span class="hljs-string">&#x27;99999&#x27;</span>;<br>                codeCopyOver.<span class="hljs-property">innerHTML</span> = closeText;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                preCode.<span class="hljs-property">style</span>.<span class="hljs-property">webkitLineClamp</span> = <span class="hljs-string">&#x27;6&#x27;</span>;<br>                codeCopyOver.<span class="hljs-property">innerHTML</span> = openText;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-comment">// 添加复制按钮</span><br>    <span class="hljs-keyword">const</span> codeCopyBtn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>);<br>    codeCopyBtn.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;copy-btn&#x27;</span>);<br>    codeCopyBtn.<span class="hljs-property">innerHTML</span> = copyText;<br>    code.<span class="hljs-title function_">appendChild</span>(codeCopyBtn);<br><br>    <span class="hljs-comment">// 添加复制功能</span><br>    codeCopyBtn.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">async</span> () =&gt; &#123;<br>        <span class="hljs-keyword">const</span> currentCodeElement = code.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;pre&#x27;</span>)?.<span class="hljs-property">innerText</span>;<br>        <span class="hljs-keyword">await</span> <span class="hljs-title function_">copyCode</span>(currentCodeElement);<br><br>        codeCopyBtn.<span class="hljs-property">innerHTML</span> = copySuccess;<br>        codeCopyBtn.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;success&#x27;</span>);<br><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            codeCopyBtn.<span class="hljs-property">innerHTML</span> = copyText;<br>            codeCopyBtn.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;success&#x27;</span>);<br>        &#125;, <span class="hljs-number">3000</span>);<br>    &#125;);<br>&#125;);<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">copyCode</span>(<span class="hljs-params">currentCode</span>) &#123;<br>    <span class="hljs-keyword">if</span> (navigator.<span class="hljs-property">clipboard</span>) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">await</span> navigator.<span class="hljs-property">clipboard</span>.<span class="hljs-title function_">writeText</span>(currentCode);<br>        &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(error);<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;当前浏览器不支持此API&#x27;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="引入函数"><a href="#引入函数" class="headerlink" title="引入函数"></a>引入函数</h3><figure class="highlight yaml"><figcaption><span>根目录/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 自定义引入css,js</span><br><span class="hljs-attr">inject:</span><br>  <span class="hljs-attr">script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;script</span> <span class="hljs-string">type=&quot;text/javascript&quot;</span> <span class="hljs-string">src=&quot;/custom/js/ZYCode.js&quot;&gt;&lt;/script&gt;</span><br></code></pre></td></tr></table></figure><h3 id="引入样式"><a href="#引入样式" class="headerlink" title="引入样式"></a>引入样式</h3><figure class="highlight yaml"><figcaption><span>根目录/_config.stellar.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">style:</span><br>  <span class="hljs-attr">codeblock:</span><br>    <span class="hljs-attr">highlightjs_theme:</span> <span class="hljs-string">/custom/css/ZYCode.css</span><br></code></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>你备份了吗?</p>]]></content>
    
    
    <summary type="html">本来Stellar简洁的风格被我改的花里胡哨的, 唉xaoxuu见打.</summary>
    
    
    
    <category term="堆栈" scheme="https://blog.thatcoder.cn/categories/%E5%A0%86%E6%A0%88/"/>
    
    
    <category term="Stellar" scheme="https://blog.thatcoder.cn/tags/Stellar/"/>
    
  </entry>
  
</feed>
